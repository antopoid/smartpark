{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/admin-dashboard/add-location/add-location.component.ts","webpack:///src/app/admin/admin-dashboard/add-location/add-location.component.html","webpack:///src/app/admin/admin-dashboard/add-slot/add-slot.component.ts","webpack:///src/app/admin/admin-dashboard/add-slot/add-slot.component.html","webpack:///src/app/admin/admin-dashboard/add-vehicle/add-vehicle.component.ts","webpack:///src/app/admin/admin-dashboard/add-vehicle/add-vehicle.component.html","webpack:///src/app/admin/admin-dashboard/admin-dashboard.component.ts","webpack:///src/app/admin/admin-dashboard/admin-dashboard.component.html","webpack:///src/app/admin/admin-dashboard/allbookings/allbookings.component.ts","webpack:///src/app/admin/admin-dashboard/allbookings/allbookings.component.html","webpack:///src/app/admin/admin-login/admin-login.component.ts","webpack:///src/app/admin/admin-login/admin-login.component.html","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/signup/signup.component.ts","webpack:///src/app/auth/signup/signup.component.html","webpack:///src/app/dashboard/bookings/bookings.component.ts","webpack:///src/app/dashboard/bookings/bookings.component.html","webpack:///src/app/dashboard/bookslot/bookslot.component.ts","webpack:///src/app/dashboard/bookslot/bookslot.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/dashboard/slots/slots.component.ts","webpack:///src/app/dashboard/slots/slots.component.html","webpack:///src/app/header-login/header-login.component.ts","webpack:///src/app/header-login/header-login.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home-main-section/home-main-section.component.ts","webpack:///src/app/home-main-section/home-main-section.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/services/admin.service.ts","webpack:///src/app/services/bookings.service.ts","webpack:///src/app/services/locations.service.ts","webpack:///src/app/services/slots.service.ts","webpack:///src/app/services/users.service.ts","webpack:///src/app/services/vehicle.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddLocationComponent","locationService","form","location_name","required","area","loadLocations","addLocation","JSON","stringify","value","subscribe","data","alert","getLocations","locations$","onSubmit","selector","templateUrl","styleUrls","AddSlotComponent","slotService","locationid","slotid","slotno","getAllSlots","addSlot","slots$","AddVehicleComponent","vehicleservice","vehicle_type","cost","loadVehicle","getVehicles","vehicles$","addVehicle","console","log","location","reload","AdminDashboardComponent","route","checkLogin","sessionStorage","clear","navigate","length","logout","AllbookingsComponent","bookingsService","getAllBookings","AllBookings$","AdminLoginComponent","adminService","adminid","password","loginJson","loginCheck","jsonData","parse","storeLogin","email","setItem","AdminComponent","routes","path","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","LoginComponent","usersService","router","SignupComponent","fullname","mobno","confPassword","confirmPasswordCheck","signup","control","undefined","cnfPassword","passControl","root","get","passValue","isError","BookingsComponent","email$","getItem","bookings$","getBookingById","getBookings","checkBookingFn","bookingid","endBooking","show","BookslotComponent","bookings","slotsService","vehicleService","actRoute","snapshot","params","currentDate","Date","date","getDate","getMonth","getFullYear","bookingdetails","load","getSlotById","vehicle_no","duration","time","checkTime","addBooking","bookingTime","DashboardComponent","SlotsComponent","locationsService","dashboardComponent","sessionValue","HeaderLoginComponent","HeaderComponent","HomeMainSectionComponent","checkSession","HomeComponent","checklogin","AdminService","_http","apiUrl","httpOptions","headers","loginDetails","post","providedIn","BookingsService","LocationsService","SlotsService","slot","UsersService","signupDetails","VehicleService","vehicle","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { LocationsService } from 'src/app/services/locations.service';\nimport { Locations } from 'src/app/models/locations.model';\n\n@Component({\n  selector: 'app-add-location',\n  templateUrl: './add-location.component.html',\n  styleUrls: ['./add-location.component.css']\n})\nexport class AddLocationComponent implements OnInit {\n\n  form = new FormGroup({\n    location_name : new FormControl('', Validators.required),\n    area : new FormControl('', Validators.required)\n  })\n  \n  constructor(private locationService: LocationsService) { }\n\n  locations$ : Locations[];\n\n  ngOnInit(): void {\n    this.loadLocations();\n  }\n\n   onSubmit(){\n    this.locationService.addLocation(JSON.stringify(this.form.value))\n    .subscribe((data => {\n      if(data == true){\n        alert(\"Location Added\")\n      }\n      else{\n        alert('Something went wrong')\n      }\n    }))\n   }\n\n   loadLocations(){\n    return this.locationService.getLocations()\n    .subscribe(data => this.locations$ = data)\n  }\n}\n","<div class=\"row mt-3  justify-content-center\">\n    <div class=\"col-md-11 card\" >\n        <div class=\"row \" style=\"background-color: #ff4f5a;color: white;margin: 10px;padding: 10px;\">\n            <div class=\"col-md-12 d-flex justify-content-center\" >\n                <h2>Add Location</h2>\n            </div>\n        </div>\n        <hr>\n        <div class=\"row mt-2\">\n            <div class=\"col-md-12\">\n                <div class=\"row mb-3\">\n                    <div class=\"col-md-12\">\n                        <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\" class=\"card m-2\">\n                            <div class=\"col-md-12\">\n                                <div class=\"m-1\">\n                                    <input class=\"input form-control\" formControlName=\"location_name\" [ngClass]=\"{ 'is-invalid':form.get('location_name').touched && form.get('location_name').invalid}\" name=\"location_name\" type=\"text\" placeholder=\"Location Name\"  autocomplete=\"off\" required>\n                                    <div class=\"invalid-feedback\">\n                                        <div>\n                                            This Field is required!!\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n                            <div class=\"col-md-12 \">\n                                <div class=\"m-1\">\n                                    <input class=\"input form-control\" formControlName=\"area\" [ngClass]=\"{ 'is-invalid':form.get('area').touched && form.get('area').invalid}\" name=\"area\" type=\"text\" placeholder=\"Address\" required>\n                                    <div class=\"invalid-feedback\">\n                                        <div>\n                                            This Field is required!!\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-12 mt-2 mb-5 \">\n                                <div class=\"m-1 mt-4\">\n                                    <button class=\"button\" type=\"submit\" [disabled]=\"!form.valid\">Add</button>\n                                </div>\n                            </div>\n                        </form>\n                        <hr>\n                        <div class=\"m-2\">\n                            <h3 class=\"font-weight-bold\">Locations Available:</h3>\n                        </div>\n                        \n                        <div class=\"card m-2\">\n                            <div class=\"row p-2\">\n                                <div class=\"col\">\n                                    <b>Location</b>\n                                </div>\n                                <div class=\"col\">\n                                   <b>Area</b>\n                                </div>\n                            </div>\n                            <hr class=\"m-1\">\n                            <div class=\"row p-2\" *ngFor='let location of locations$'>\n                                <div class=\"col\" >\n                                    {{location.location_name}}\n                                </div>\n                                <div class=\"col\">\n                                    {{location.area}}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { SlotsService } from 'src/app/services/slots.service';\nimport { Slots } from 'src/app/models/slots.model';\nimport { LocationsService } from 'src/app/services/locations.service';\nimport { Locations } from 'src/app/models/locations.model';\n\n@Component({\n  selector: 'app-add-slot',\n  templateUrl: './add-slot.component.html',\n  styleUrls: ['./add-slot.component.css']\n})\nexport class AddSlotComponent implements OnInit {\n  \n  slots$: Slots[];\n  locations$: Locations[];\n  form = new FormGroup({\n    locationid : new FormControl('', Validators.required),\n    slotid : new FormControl('', Validators.required),\n    slotno : new FormControl('', Validators.required)\n  })\n  constructor(private slotService: SlotsService, private locationService : LocationsService) { }\n\n  ngOnInit(): void {\n    this.getAllSlots();\n    this.loadLocations();\n  }\n  onSubmit(){\n    this.slotService.addSlot(JSON.stringify(this.form.value))\n    .subscribe((data => {\n      if(data == true){\n        alert(\"Slot Added\")\n      }\n      else{\n        alert('Something went wrong')\n      }\n    }))\n  }\n\n  getAllSlots(){\n    this.slotService.getAllSlots()\n    .subscribe(data => this.slots$ = data)\n  }\n\n  loadLocations(){\n    return this.locationService.getLocations()\n    .subscribe(data => this.locations$ = data)\n  }\n}\n","<div class=\"row mt-3  justify-content-center\">\n    <div class=\"col-md-11 card\" >\n        <div class=\"row \" style=\"background-color: #ff4f5a;color: white;margin: 10px;padding: 10px;\">\n            <div class=\"col-md-12 d-flex justify-content-center\" >\n                <h2>Add Slot</h2>\n            </div>\n        </div>\n        <hr>\n        <div class=\"row mt-2\">\n            <div class=\"col-md-12\">\n                <div class=\"row mb-3\">\n                    <div class=\"col-md-12\">\n                        <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\" class=\"card m-2\">\n\n                            <div class=\"col-md-12\">\n                                <div class=\"m-1\">\n                                    <div class=\"form-group\">\n                                        <label ><h3 class=\"font-weight-bold m-0\">Select Location:</h3></label>\n                                        <select class=\"form-control\" formControlName=\"locationid\" [ngClass]=\"{ 'is-invalid':form.get('locationid').touched && form.get('locationid').invalid}\" name=\"locationid\">\n                                          <option *ngFor='let location of locations$' value=\"{{location.locationid}}\">{{location.locationid}}. {{location.location_name}}</option>\n                                        </select>                                    \n                                        <div class=\"invalid-feedback\">\n                                            <div>\n                                                This Field is required!!\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n\n                            <div class=\"col-md-12\">\n                                <div class=\"m-1\">\n                                    <input class=\"input form-control\" formControlName=\"slotid\" [ngClass]=\"{ 'is-invalid':form.get('slotid').touched && form.get('slotid').invalid}\" name=\"slotid\" type=\"text\" placeholder=\"Slot ID\"  autocomplete=\"off\" required>\n                                    <small>Format: slotid + slot + slotno</small>\n                                    <div class=\"invalid-feedback\">\n                                        <div>\n                                            This Field is required!!\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n                            <div class=\"col-md-12 \">\n                                <div class=\"m-1\">\n                                    <input class=\"input form-control\" formControlName=\"slotno\" [ngClass]=\"{ 'is-invalid':form.get('slotno').touched && form.get('slotno').invalid}\" name=\"slotno\" type=\"text\" placeholder=\"Slot Number\" required>\n                                    <small>Format: Slot + slotno</small>\n                                    <div class=\"invalid-feedback\">\n                                        <div>\n                                            This Field is required!!\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-12 mt-2 mb-2 \">\n                                <div class=\"m-1 mt-4\">\n                                    <button class=\"button\" type=\"submit\" [disabled]=\"!form.valid\">Add</button>\n                                </div>\n                            </div>\n                        </form>\n                        <hr>\n                        <div class=\"m-2\">\n                            <h3 class=\"font-weight-bold\">Slots Available:</h3>\n                        </div>\n                        <div class=\"card m-2 slots\">\n                            <div class=\"row p-2\">\n                                <div class=\"col-2\">\n                                    <b>Location ID</b>\n                                </div>\n                                <div class=\"col-4\">\n                                   <b>Slot ID</b>\n                                </div>\n                                <div class=\"col-4\">\n                                    <b>Slot Number</b>\n                                 </div>\n                            </div>\n                            <hr class=\"m-1\">\n                            <div class=\"row p-2\" *ngFor='let slot of slots$'>\n                                <div class=\"col-2\" >\n                                    {{slot.locationid}}\n                                </div>\n                                <div class=\"col-4\">\n                                    {{slot.slotid}}\n                                </div>\n                                <div class=\"col-4\">\n                                    {{slot.slotno}}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Vehicle } from 'src/app/models/vehicle.model';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { VehicleService } from 'src/app/services/vehicle.service';\n\n@Component({\n  selector: 'app-add-vehicle',\n  templateUrl: './add-vehicle.component.html',\n  styleUrls: ['./add-vehicle.component.css']\n})\nexport class AddVehicleComponent implements OnInit {\n\n  vehicles$ : Vehicle[];\n  form = new FormGroup({\n    vehicle_type : new FormControl('', Validators.required),\n    cost : new FormControl('', Validators.required)\n  })\n  constructor(private vehicleservice : VehicleService) { }\n\n  ngOnInit(): void {\n    this.loadVehicle();\n  }\n\n  loadVehicle(){\n    this.vehicleservice.getVehicles()\n    .subscribe(data => this.vehicles$ = data) \n  }\n\n  onSubmit(){\n    this.vehicleservice.addVehicle(JSON.stringify(this.form.value))\n    .subscribe(data => console.log(data))\n    alert('Vehicle Added')\n    location.reload();\n  }\n}\n","<div class=\"row mt-3  justify-content-center\">\n    <div class=\"col-md-11 card\" >\n        <div class=\"row \" style=\"background-color: #ff4f5a;color: white;margin: 10px;padding: 10px;\">\n            <div class=\"col-md-12 d-flex justify-content-center\" >\n                <h2>Add Vehicle</h2>\n            </div>\n        </div>\n        <hr>\n        <div class=\"row mt-2\">\n            <div class=\"col-md-12\">\n                <div class=\"row mb-3\">\n                    <div class=\"col-md-12\">\n                        <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\" class=\"card m-2\">\n\n                            <div class=\"col-md-12\">\n                                <div class=\"m-1\">\n                                    <input class=\"input form-control\" formControlName=\"vehicle_type\" [ngClass]=\"{ 'is-invalid':form.get('vehicle_type').touched && form.get('vehicle_type').invalid}\" name=\"vehicle_type\" type=\"text\" placeholder=\"Vehicle Type\"  autocomplete=\"off\" required>\n                                    <div class=\"invalid-feedback\">\n                                        <div>\n                                            This Field is required!!\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n                            <div class=\"col-md-12 \">\n                                <div class=\"m-1\">\n                                    <input class=\"input form-control\" formControlName=\"cost\" [ngClass]=\"{ 'is-invalid':form.get('cost').touched && form.get('cost').invalid}\" name=\"cost\" type=\"text\" placeholder=\"Price per hour\" autocomplete=\"off\" required>\n                                    <div class=\"invalid-feedback\">\n                                        <div>\n                                            This Field is required!!\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-12 mt-2 mb-2 \">\n                                <div class=\"m-1 mt-4\">\n                                    <button class=\"button\" type=\"submit\" [disabled]=\"!form.valid\">Add</button>\n                                </div>\n                            </div>\n                        </form>\n                        <hr>\n                        <div class=\"m-2\">\n                            <h3 class=\"font-weight-bold\">Vehicle Available:</h3>\n                        </div>\n                        <div class=\"card m-2 slots\">\n                            <div class=\"row p-2\">\n                                <div class=\"col-2\">\n                                    <b>Vehicle ID</b>\n                                </div>\n                                <div class=\"col-4\">\n                                   <b>Vehicle Type</b>\n                                </div>\n                                <div class=\"col-4\">\n                                    <b>Price per hour</b>\n                                 </div>\n                            </div>\n                            <hr class=\"m-1\">\n                            <div class=\"row p-2\" *ngFor='let vehicle of vehicles$'>\n                                <div class=\"col-2\" >\n                                    {{vehicle.vehicleid}}\n                                </div>\n                                <div class=\"col-4\">\n                                    {{vehicle.vehicle_type}}\n                                </div>\n                                <div class=\"col-4\">\n                                    {{vehicle.cost}}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent implements OnInit {\n\n  constructor(private route: Router) { }\n\n  ngOnInit(): void {\n    this.checkLogin();\n  }\n\n  logout(){\n    sessionStorage.clear()\n    this.route.navigate(['admin'])\n  }\n\n  checkLogin(){\n    if (sessionStorage.length == 0){\n      this.route.navigate(['admin'])\n    }\n  }\n}\n","<!-- <app-header-login></app-header-login> -->\n<div class=\"row justify-content-center\">\n    <div class=\"col-md-2 p-0 sidebar d-flex align-items-center flex-column\">\n        <div>\n            <button routerLink=\"/admin-dashboard\" class=\"button\">Ajouter Parking</button>\n        </div>\n        <div>\n            <button routerLink=\"/admin-dashboard/add-slot\" class=\"button\">Ajouter Place</button>\n        </div>\n        <div>\n            <button routerLink=\"/admin-dashboard/add-vehicle\" class=\"button\">Ajouter Vehicule</button>\n        </div>\n        <div>\n            <button routerLink=\"/admin-dashboard/allbookings\" class=\"button\">Toutes les réservations</button>\n        </div>\n        <div>\n            <button (click)=\"logout()\" class=\"button\">Déconnexion</button>\n        </div>\n    </div>\n    <div class=\"col-md-10\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Bookings } from 'src/app/models/bookings.model';\nimport { BookingsService } from 'src/app/services/bookings.service';\n\n@Component({\n  selector: 'app-allbookings',\n  templateUrl: './allbookings.component.html',\n  styleUrls: ['./allbookings.component.css']\n})\nexport class AllbookingsComponent implements OnInit {\n\n  AllBookings$ : Bookings[];\n\n  constructor(private bookingsService : BookingsService) { }\n\n  ngOnInit(): void {\n    this.getAllBookings();\n  }\n\n  getAllBookings(){\n    return this.bookingsService.getAllBookings()\n    .subscribe(data => this.AllBookings$ = data)\n  }\n\n}\n","<div class=\"row mt-3  justify-content-center\">\n    <div class=\"col-md-11 card\" >\n        <div class=\"row \" style=\"background-color: #ff4f5a;color: white;margin: 10px;padding: 10px;\">\n            <div class=\"col-md-12 d-flex justify-content-center\" >\n                <h2>All Bookings</h2>\n            </div>\n        </div>\n        <hr>\n        <div class=\"row mt-2\">\n            <div class=\"col-md-12\">\n                <table class=\"table\">\n                    <thead class=\"thead\">\n                      <tr>\n                        <th scope=\"col\">Booking ID</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Vehicle Type</th>\n                        <th scope=\"col\">Vehicle No</th>\n                        <th scope=\"col\">Date</th>\n                        <th scope=\"col\">Time</th>\n                        <th scope=\"col\">Duration</th>\n                        <th scope=\"col\">Cost</th>\n                        <th scope=\"col\">Location ID</th>\n                        <th scope=\"col\">Slot ID</th>\n                        <th scope=\"col\">Status</th>\n                      </tr>\n                    </thead>\n                    <tbody >\n                      <tr *ngFor='let booking of AllBookings$'>\n                        <th scope=\"row\">{{booking.bookingid}}</th>\n                        <td>{{booking.email}}</td>\n                        <td>{{booking.vehicle_type}}</td>\n                        <td>{{booking.vehicle_no}}</td>\n                        <td>{{booking.date}}</td>\n                        <td>{{booking.time}}</td>\n                        <td>{{booking.duration}}</td>\n                        <td>{{booking.cost}}</td>\n                        <td>{{booking.locationid}}</td>\n                        <td>{{booking.slotid}}</td>\n                        <div *ngIf='booking.paid == 1'>\n                          <td class=\"text-success\">Booking Ended</td>\n                        </div>\n                        <div *ngIf='booking.paid == 0'>\n                          <td class=\"text-danger\">Booking ongoing</td>\n                        </div>\n                      </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css']\n})\nexport class AdminLoginComponent implements OnInit {\n\n  form = new FormGroup({\n    adminid : new FormControl('', Validators.required),\n    password : new FormControl('', Validators.required)\n  })\n  constructor(private route : Router, private adminService: AdminService) { }\n\n  ngOnInit(): void {\n  }\n  onSubmit() {\n    var loginJson = JSON.stringify(this.form.value);\n    this.adminService.loginCheck(loginJson)\n    .subscribe((data => {\n      if(data == true){\n      alert(\"Login successful\");\n      var jsonData = JSON.parse(loginJson);\n      this.storeLogin(jsonData['email']);\n      this.route.navigate(['/admin-dashboard']);\n      \n      }\n      else{\n        alert(\"Invalid Login\"); \n      }\n    }))\n  }\n\n  storeLogin(email){\n    sessionStorage.setItem('admin',email);\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-12 wrapper d-flex justify-content-center align-items-center\" style=\"height:95vh\">\n        <div class=\"row d-flex justify-content-center align-items-center formwrapper card\">\n            <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\">\n                <div class=\"col-md-12 mt-4 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <!-- <button class=\"button\" routerLink=\"/signup\">Sign Up </button>\n                        <button class=\"button\" routerLink=\"/login\">Login</button> -->\n                        <h2>Connexion Administrateur</h2> \n                    </div>\n                </div>\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <input class=\"input form-control\" formControlName=\"adminid\" [ngClass]=\"{ 'is-invalid':form.get('adminid').touched && form.get('adminid').invalid}\" name=\"adminid\" type=\"email\" placeholder=\"Admin ID\" autocomplete=\"off\" required>\n                        <div class=\"invalid-feedback\">\n                            <div *ngIf=\"form.get('adminid').errors?.required\">\n                                This Field is required!!\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <input class=\"input form-control\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid':form.get('password').touched && form.get('password').invalid }\" type=\"password\" placeholder=\"Mot De Passe\" required>\n                        <div class=\"invalid-feedback\">\n                            <div>\n                                This Field is required!!\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"mt-4\">\n                        <p class=\"danger\"><button style=\"border:none;background-color: transparent;color: #ff4f5a;\">Mot De Passe Oublié ?</button></p>\n                    </div>\n                </div>\n                <div class=\"col-md-12 mt-2 mb-5 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1 mt-4\">\n                        <button class=\"button\" type=\"submit\" [disabled]=\"!form.valid\" >Connexion</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  \n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './auth/login/login.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { HomeComponent } from './home/home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SlotsComponent } from './dashboard/slots/slots.component';\nimport { BookingsComponent } from './dashboard/bookings/bookings.component';\nimport { BookslotComponent } from './dashboard/bookslot/bookslot.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { AdminLoginComponent } from './admin/admin-login/admin-login.component';\nimport { AdminDashboardComponent } from './admin/admin-dashboard/admin-dashboard.component';\nimport { AddLocationComponent } from './admin/admin-dashboard/add-location/add-location.component';\nimport { AddSlotComponent } from './admin/admin-dashboard/add-slot/add-slot.component';\nimport { AllbookingsComponent } from './admin/admin-dashboard/allbookings/allbookings.component';\nimport { AddVehicleComponent } from './admin/admin-dashboard/add-vehicle/add-vehicle.component';\n\nconst routes: Routes = [\n  {path:'',component:HomeComponent},\n  {path:'login',component:LoginComponent},\n  {path:'signup',component:SignupComponent},\n  {path:'dashboard',component:DashboardComponent,\n  children:[\n    {path:'',component:SlotsComponent},\n    {path:'bookings',component:BookingsComponent},\n    {path:'bookslot/:locationid',component:BookslotComponent}\n  ]},\n  {path:'admin',component: AdminComponent,\n  children:[\n    {path:'',component:AdminLoginComponent}\n  ]},\n  {path:'admin-dashboard',component: AdminDashboardComponent,\n  children:[\n    {path:'',component: AddLocationComponent},\n    {path:'add-slot', component: AddSlotComponent},\n    {path:'allbookings', component: AllbookingsComponent},\n    {path: 'add-vehicle', component: AddVehicleComponent}\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'car-parking';\n\n}\n\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { HomeMainSectionComponent } from './home-main-section/home-main-section.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { SlotsComponent } from './dashboard/slots/slots.component';\nimport { BookingsComponent } from './dashboard/bookings/bookings.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { BookslotComponent } from './dashboard/bookslot/bookslot.component';\n\nimport { AdminService} from './services/admin.service';\nimport { LocationsService } from './services/locations.service';\nimport { BookingsService } from './services/bookings.service';\nimport { VehicleService } from './services/vehicle.service';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderLoginComponent } from './header-login/header-login.component';\nimport { UsersService } from './services/users.service';\nimport { AdminComponent } from './admin/admin.component';\nimport { AdminLoginComponent } from './admin/admin-login/admin-login.component';\nimport { AdminDashboardComponent } from './admin/admin-dashboard/admin-dashboard.component';\nimport { AddLocationComponent } from './admin/admin-dashboard/add-location/add-location.component';\nimport { AddSlotComponent } from './admin/admin-dashboard/add-slot/add-slot.component';\nimport { AllbookingsComponent } from './admin/admin-dashboard/allbookings/allbookings.component';\nimport { SlotsService } from './services/slots.service';\nimport { AddVehicleComponent } from './admin/admin-dashboard/add-vehicle/add-vehicle.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    HomeMainSectionComponent,\n    SignupComponent,\n    LoginComponent,\n    HomeComponent,\n    SlotsComponent,\n    BookingsComponent,\n    DashboardComponent,\n    BookslotComponent,\n    HeaderLoginComponent,\n    AdminComponent,\n    AdminLoginComponent,\n    AdminDashboardComponent,\n    AddLocationComponent,\n    AddSlotComponent,\n    AllbookingsComponent,\n    AddVehicleComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    NoopAnimationsModule,\n    ReactiveFormsModule\n  ],\n  providers: [LocationsService, BookingsService, VehicleService, UsersService, SlotsService, AdminService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UsersService } from 'src/app/services/users.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form = new FormGroup({\n    email : new FormControl('', [Validators.required, Validators.email]),\n    password : new FormControl('', Validators.required)\n  })\n  constructor(private usersService: UsersService, public router: Router) { }\n\n  ngOnInit(): void {\n    this.checkLogin();\n  }\n     \n  onSubmit() {\n    var loginJson = JSON.stringify(this.form.value);\n    this.usersService.loginCheck(loginJson)\n    .subscribe((data => {\n      if(data == true){\n        alert(\"Login successful\");\n        var jsonData = JSON.parse(loginJson);\n        this.storeLogin(jsonData['email']);\n        this.router.navigate(['/dashboard']);\n      }\n      else{\n        alert(\"Invalid Login\"); \n      }\n    }))\n  }\n\n  storeLogin(email){\n    sessionStorage.setItem(\"email\", email); \n  }\n  checkLogin(){\n    if (sessionStorage.length != 0){\n      this.router.navigate(['/']);\n    }\n  }\n}\n","<app-header></app-header>\n<div class=\"row\">\n    <div class=\"col-md-12 wrapper d-flex justify-content-center align-items-center\" style=\"height:95vh\">\n        <div class=\"row d-flex justify-content-center align-items-center formwrapper card\">\n            <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\">\n                <div class=\"col-md-12 mt-4 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <button class=\"button\" routerLink=\"/signup\">Inscription</button>\n                        <button class=\"button\" routerLink=\"/login\">Connexion</button>\n                    </div>\n                </div>\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <input class=\"input form-control\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid':form.get('email').touched && form.get('email').invalid}\" name=\"email\" type=\"email\" placeholder=\"Email\" autocomplete=\"off\" required>\n                        <div class=\"invalid-feedback\">\n                            <div *ngIf=\"form.get('email').errors?.required\">\n                                This Field is required!!\n                            </div>\n                            <div *ngIf=\"form.get('email').errors?.email\">\n                                Enter Valid Email Address!!\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <input class=\"input form-control\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid':form.get('password').touched && form.get('password').invalid }\" type=\"password\" placeholder=\"Mot De Passe\" required>\n                        <div class=\"invalid-feedback\">\n                            <div>\n                                This Field is required!!\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"mt-4\">\n                        <p class=\"danger\"><button style=\"border:none;background-color: transparent;color: #ff4f5a;\">Mot de passe oublié ?</button></p>\n                    </div>\n                </div>\n                <div class=\"col-md-12 mt-2 mb-5 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1 mt-4\">\n                        <button class=\"button\" type=\"submit\" [disabled]=\"!form.valid\" >Connexion</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { UsersService } from 'src/app/services/users.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  form = new FormGroup({\n    email : new FormControl('', [Validators.required, Validators.email]),\n    fullname : new FormControl('', Validators.required),\n    mobno : new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required),\n    confPassword : new FormControl('',[Validators.required,this.confirmPasswordCheck])\n  })\n\n  constructor(private usersService: UsersService,  public router: Router) { }\n\n  ngOnInit(): void {\n    this.checkLogin();\n  }\n  onSubmit(){\n    var loginJson = JSON.stringify(this.form.value);\n    this.usersService.signup(loginJson)\n    .subscribe((data => {\n      if(data == true){\n      alert(\"Signup successful\");\n      var jsonData = JSON.parse(loginJson);\n      this.storeLogin(jsonData['email']);\n      this.router.navigate(['/dashboard']);\n      \n      }\n      else{\n        alert(\"User Already Exist\"); \n      }\n    }))\n  }\n\n  storeLogin(email){\n    sessionStorage.setItem(\"email\", email); \n  }\n\n  checkLogin(){\n    if (sessionStorage.length != 0){\n      this.router.navigate(['/']);\n    }\n  }\n\n  confirmPasswordCheck(control: AbstractControl){\n    if (control && control.value !== null || control.value != undefined){\n      const cnfPassword = control.value;\n      const passControl = control.root.get('password')\n\n      if (passControl){\n        const passValue = passControl.value;\n        if (passValue !== cnfPassword){\n          return {\n            isError: true\n          }\n        }\n      }\n    } \n    return null\n  }\n\n}\n","<app-header></app-header>\n<div class=\"row\">\n    <div class=\"col-md-12 wrapper d-flex justify-content-center align-items-center\" style=\"height:95vh\">\n        <div class=\"row d-flex justify-content-center align-items-center formwrapper card\">\n            <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\">\n                <div class=\"col-md-12 mt-4 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <button class=\"button\" routerLink=\"/signup\">Inscription</button>\n                        <button class=\"button\" routerLink=\"/login\">Connexion</button>\n                    </div>\n                </div>\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <input class=\"input form-control\"  formControlName=\"email\" [ngClass]=\"{ 'is-invalid':form.get('email').touched && form.get('email').invalid}\" autocomplete=\"off\" type=\"email\" placeholder=\"Email\">\n                        <div class=\"invalid-feedback\">\n                            <div *ngIf=\"form.get('email').errors?.required\">\n                                This Field is required!!\n                            </div>\n                            <div *ngIf=\"form.get('email').errors?.email\">\n                                Enter Valid Email Address!!\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <input class=\"input form-control\"  formControlName=\"fullname\" [ngClass]=\"{ 'is-invalid':form.get('fullname').touched && form.get('fullname').invalid}\" type=\"text\" placeholder=\"Nom Complet\">\n                        <div class=\"invalid-feedback\">\n                            <div>\n                                This Field is required!!\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <input class=\"input form-control\"  formControlName=\"mobno\" [ngClass]=\"{ 'is-invalid':form.get('mobno').touched && form.get('mobno').invalid}\" type=\"text\" placeholder=\"Numero Telephone\">\n                        <div class=\"invalid-feedback\">\n                            <div>\n                                This Field is required!!\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <input class=\"input form-control\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid':form.get('password').touched && form.get('password').invalid }\" type=\"password\" placeholder=\"Mot De Passe\">\n                        <div class=\"invalid-feedback\">\n                            <div>\n                                This Field is required!!\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <input class=\"input form-control\" type=\"Password\" formControlName=\"confPassword\" [ngClass]=\"{ 'is-invalid':form.get('confPassword').touched && form.get('confPassword').invalid }\" formControlName=\"confPassword\" placeholder=\"Confirmer Mot De Passe\">\n                        <div class=\"invalid-feedback\">\n                            <div *ngIf=\"form.get('confPassword').errors?.required\">\n                                This Field is required!!\n                            </div>\n                            <div *ngIf=\"form.get('confPassword').errors?.isError\">\n                                Password does not match!!\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-12 mt-2 mb-5 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1 mt-4\">\n                        <button class=\"button\" type=\"reset\">Reset</button>\n                        <button class=\"button\" [disabled]=\"!form.valid\">Inscription</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Bookings } from 'src/app/models/bookings.model';\nimport { BookingsService } from 'src/app/services/bookings.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-bookings',\n  templateUrl: './bookings.component.html',\n  styleUrls: ['./bookings.component.css']\n})\nexport class BookingsComponent implements OnInit {\n\n  show: boolean;\n  email$ =  sessionStorage.getItem('email');\n  bookings$: Bookings[] = [];\n\n  constructor(private bookingsService: BookingsService, \n    public router: Router) { }\n\n  ngOnInit() {\n    this.checkLogin();\n    this.getBookingById();\n    \n  }\n\n  getBookingById(){\n    return this.bookingsService.getBookings(this.email$)\n    .subscribe(data => {this.bookings$ = data, this.checkBookingFn();})\n  }\n\n  endBooking(bookingid){\n    return this.bookingsService.endBooking(bookingid)\n    .subscribe((data:{}) => {\n      alert('Booking Ended');\n      location.reload();\n      this.router.navigate(['dashboard/bookings'])\n    })\n  }\n  checkBookingFn(){\n    console.log()\n    if (this.bookings$.length == 0){\n      this.show = true\n    }\n    else{\n      this.show = false\n    }\n  }\n\n  checkLogin(){\n    if (sessionStorage.length == 0){\n      this.router.navigate(['login']);\n    }\n  }\n\n}\n","<div class=\"row mt-3  justify-content-center\">\n    <div class=\"col-md-11 card \" >\n        <div class=\"row \" style=\"background-color: #4f5bff;color: white;margin: 10px;padding: 10px;\">\n            <div class=\"col-md-12 d-flex justify-content-center\" >\n                <h2>Mes Réservations</h2>\n            </div>\n        </div>\n        <hr>\n        <div class=\"row mt-2\">\n            <div class=\"col-md-12\">\n                <div class=\"row mb-3\">\n                    <div class=\"col-md-12 overflow-auto\" style=\"height: 35rem;\">\n                        <div class=\"accordion\" id=\"accordionExample\">\n                            <div *ngIf='!show'>\n                                <div *ngFor='let booking of bookings$'  class=\"card\">\n                                    <div class=\"card-header\" id=\"headingTwo\">\n                                        <div class=\"row\">\n                                            <div class=\"col-md-3\">\n                                                <h3><b>Localisation :</b> {{booking.locationid}}</h3>\n                                            </div>\n                                            <div class=\"col-md-7\">\n                                                <h3><b>Date :</b> {{booking.date}}</h3>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <div class=\"card-body\">\n                                            <div class=\"row\">\n                                                <div class=\"col-auto mr-auto\">\n                                                  <b>Numéro De Place :</b> {{booking.slotid}} <br> \n                                                  <b>Type De Vehicule :</b> {{booking.vehicle_type}} <br> \n                                                  <b>Durée :</b> {{booking.duration}} hours <br> \n                                                  <div *ngIf=\"booking.paid != 0\">\n                                                    <b>Coût :</b> {{booking.cost}} euros\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-auto\" *ngIf='booking.paid == 0'>\n                                                  <button class=\"button\" (click) = 'endBooking(booking.bookingid)'> Fin De Réservation</button>\n                                                </div>\n                                                <div class=\"col-auto\" *ngIf='booking.paid != 0'>\n                                                    <p class=\"text-success font-weight-bold\">Réservation Complétée</p>\n                                                  </div>\n                                            </div>  \n                                        </div>\n                                    </div>\n                                </div>\n                            </div>  \n                            <div *ngIf='show'>\n                                <h2>\n                                    Aucune Réservation ...\n                                </h2>\n                                <button class=\"button\" routerLink='/dashboard' > Réserver</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BookingsService } from 'src/app/services/bookings.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { VehicleService } from 'src/app/services/vehicle.service';\nimport { Vehicle } from 'src/app/models/vehicle.model';\nimport { SlotsService } from 'src/app/services/slots.service';\nimport { Slots } from 'src/app/models/slots.model';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-bookslot',\n  templateUrl: './bookslot.component.html',\n  styleUrls: ['./bookslot.component.css']\n})\nexport class BookslotComponent implements OnInit {\n\n    load : boolean;\n    vehicles$: Vehicle[];\n    slots$: Slots[];\n    locationid = this.actRoute.snapshot.params['locationid'];\n    currentDate = new Date();\n    date = this.currentDate.getDate() + '-' + this.currentDate.getMonth() + '-' + this.currentDate.getFullYear()\n\n  @Input() bookingdetails = {\n    'email':'',\n    'locationid':'',\n    'vehicle_type':'',\n    'duration':0,\n    'time':'',\n    'slotid':'',\n    'date': this.date,\n    'vehicle_no':''\n  }\n  constructor(\n    private bookings:BookingsService, \n    private slotsService: SlotsService, \n    private vehicleService: VehicleService, \n    public actRoute :ActivatedRoute, \n    public router: Router) { }\n\n  ngOnInit(): void {\n    this.load = false;\n    this.getVehicles();\n    this.getSlotById();\n  }\n\n  getVehicles(){\n    return this.vehicleService.getVehicles()\n    .subscribe(data => this.vehicles$ = data)\n    \n  }\n  getSlotById(){\n    return this.slotsService.getSlotById(this.locationid)\n    .subscribe(data => this.slots$ = data)\n  }\n\n  addBooking(){\n\n    if(this.bookingdetails.vehicle_no == '' || this.bookingdetails.vehicle_type == '' || this.bookingdetails.slotid == '' || this.bookingdetails.duration == 0, this.bookingdetails.time == ''){\n      alert('Kindly fill all the data')\n      return\n    } \n    if (!this.checkTime(this.bookingdetails.time)){\n      alert(\"OOPS!! Try booking 2 hours earlier..\")\n      return\n    }\n    this.load = true;\n    this.bookings.addBooking(this.locationid, this.bookingdetails)\n    .subscribe((data:{}) => {\n      alert('Slot Booked');\n      this.router.navigate(['/dashboard/bookings'])\n    })\n  }\n\n  checkTime(bookingTime){\n\n  /*var currentTime = new Date();\n  \n  var ISTTime = new Date(currentTime.getTime() + (330 + currentTime.getTimezoneOffset())*60000)\n  ISTTime.setHours(ISTTime.getHours()+2)\n  \n  var time = bookingTime.split(':')\n  var h = parseInt(time[0])\n  var m = parseInt(time[1])\n  if (h<ISTTime.getHours() || (h == ISTTime.getHours() && m < ISTTime.getMinutes())){\n      return false\n  }*/\n    return true;\n  }\n}\n","<div class=\"row mt-3 justify-content-center\">\n    <div class=\"col-md-11 card\" >\n        <div class=\"row \" style=\"background-color: #4f5bff;color: white;margin: 10px;padding: 10px;\">\n            <div class=\"col-md-12 d-flex justify-content-center\" >\n                <h2>Place De Parking</h2>\n            </div>\n        </div>\n        <div *ngIf=\"load\" class=\"d-flex justify-content-center\">\n            <div class=\"loadingio-spinner-pulse-f18fi8swilg\"><div class=\"ldio-letfb25733\">\n                <div></div><div></div><div></div>\n                </div>\n            </div>\n        </div>\n        \n        <hr>\n        <div class=\"row mt-2\">\n            <div class=\"col-md-12\">\n                <div class=\"row mb-3\">\n                    <div class=\"col-md-12\">\n                        <h4>ID: {{locationid}}</h4>\n                        <form class=\"card\" name=\"bookingForm\">\n                            <!-- select vehicle    -->\n                            <div class=\"col-md-12 m-2\">\n                                <div class=\"form-group\">\n                                    <label for=\"vehicle_type\">Sélectionner le type de véhicule</label>\n                                    <select class=\"form-control\"  [(ngModel)]=\"bookingdetails.vehicle_type\" name=\"Type de vehicule\" id=\"vehicle_type\">\n                                            <option *ngFor='let vehicle of vehicles$' value=\"{{vehicle.vehicle_type}}\">{{vehicle.vehicle_type}}</option>                                  \n                                    </select>\n                                </div>\n                            </div>\n                            <!-- end vechicle select -->\n\n                            <!-- vehicle number enter -->\n                            <div class=\"col-md-12 m-2\">\n                                    <input class=\"input\" type=\"text\" [(ngModel)]=\"bookingdetails.vehicle_no\" name=\"Plaque d'immatriculation\" placeholder=\"Vehicle Number\" autocomplete=\"off\" required>\n\n                                    <small>FORMAT: AA-123-BB</small>\n                            </div>\n                            <!-- end vehicle number -->\n\n                            <!-- select date and time -->\n                            <div class=\"col-md-12 mt-2 mb-3\">\n                                <div class=\"row m-2\">\n                                    <div>\n                                        Sélectionner l'heure: <input type=\"time\" id=\"time\" [(ngModel)]=\"bookingdetails.time\" name=\"heure\">\n                                        <br>\n                                        <small>NOTE: Réserver 2 heures avant ...</small>\n                                    </div>            \n                                </div>\n                            </div>\n                            <!-- end date and time -->\n\n                            <!-- enter hours    -->\n                            <div class=\"col-md-12 mb-3 ml-2\">\n\n                                <input class=\"input mt-0\" name=\"Durée\" id=\"duration\" type=\"number\" min=\"1\" max=\"24\" [(ngModel)]=\"bookingdetails.duration\" id=\"duration\" placeholder=\"Heure Estimée\" autocomplete=\"off\"  required>\n                            </div>\n                            <!-- end hours    -->\n\n                            <!-- select slot    -->\n                            <div class=\"col-md-12\">\n                                <h4 class=\"m-2\">Selectionner la place de parking</h4>\n                                <div class=\"row border \">\n                                    <div class=\"col-2 m-1 pt-3 pb-0\"  *ngFor=\"let slot of slots$\" >   \n                                        <div  *ngIf=\"slot.status != 0;\" >\n                                            \n                                            <input type=\"radio\" disabled [(ngModel)]=\"bookingdetails.slotid\" id=\"{{slot.slotno}}\" name=\"slotid\" value=\"{{slot.slotid }}\">\n                                            <label  id=\"slot\" for=\"{{slot.slotno}}\">{{slot.slotno}}</label> \n                                            <small class=\"text-danger\">Deja Réservée!</small>\n                                          \n                                        </div>    \n                                        <div *ngIf=\"slot.status == 0;\">\n                                            <input type=\"radio\"  [(ngModel)]=\"bookingdetails.slotid\" id=\"{{slot.slotno}}\" name=\"disabled\" value=\"{{slot.slotid }}\">\n                                            <label id=\"slot\" for=\"{{slot.slotno}}\">{{slot.slotno}}</label><br>\n                                        </div>\n                                        \n                                        \n                                    </div>\n                                </div>\n                            </div>\n                            <!-- end slot select     -->\n                            \n                            <!-- book button    -->\n                            <div class=\"col-md-12 mt-3 mb-5\">\n                                <div class=\"m-1 mt-2\">\n                                    <div class=\"row\">\n                                        <div class=\"col-2\">\n                                            <input type=\"reset\" class=\"button\" value=\"Reset\">\n                                        </div>\n                                        <div class=\"col\">\n                                            <button class=\"button\"  (click)='addBooking()'>Réserver la place</button>\n                                        </div>\n                                    </div>                                    \n                                </div>\n                            </div>\n                            <!-- end book button -->\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.checkLogin();\n  }\n\n  checkLogin(){\n    if (sessionStorage.length == 0){\n      this.router.navigate(['login']);\n    }\n  }\n}\n","<app-header-login></app-header-login>\n<div class=\"row justify-content-center\">\n    <div class=\"col-md-2 p-0 sidebar d-flex align-items-center flex-column\">\n        <div>\n            <button routerLink=\"/dashboard\" class=\"button\">Places Disponibles</button>\n        </div>\n        <div>\n            <button routerLink=\"/dashboard/bookings\" class=\"button\">Mes Réservations</button>\n        </div>\n        <!-- <div>\n            <button routerLink=\"/dashboard/bookslot\" class=\"button\">Book Slot</button>\n        </div> -->\n    </div>\n    <div class=\"col-md-10\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Locations } from '../../models/locations.model';\nimport { LocationsService } from 'src/app/services/locations.service';\nimport { Vehicle } from 'src/app/models/vehicle.model';\nimport { VehicleService } from 'src/app/services/vehicle.service';\nimport { DashboardComponent } from 'src/app/dashboard/dashboard.component';\n\n@Component({\n  selector: 'app-slots',\n  templateUrl: './slots.component.html',\n  styleUrls: ['./slots.component.css']\n})\nexport class SlotsComponent implements OnInit {\n\n  locations$: Locations[];\n  vehicles$: Vehicle[];\n  sessionValue : string = \"\";\n\n  constructor(\n    private locationsService: LocationsService,\n    private vehicleService: VehicleService,\n    private dashboardComponent: DashboardComponent) { }\n\n  ngOnInit() {\n    this.dashboardComponent.checkLogin();\n    this.loadLocations();\n    this.loadVehicle();\n    \n  }\n\n  loadLocations(){\n    return this.locationsService.getLocations()\n    .subscribe(data => this.locations$ = data)\n  }\n\n  loadVehicle(){\n    return this.vehicleService.getVehicles()\n    .subscribe(data => this.vehicles$ = data)\n  }\n}\n","<div class=\"row mt-3  justify-content-center\">\n  <div class=\"col-md-11 card\" >\n    <div class=\"row \" style=\"background-color: #4f5bff;color: white;margin: 10px;padding: 10px;border-radius: 5px;\">\n      <div class=\"col-md-12 d-flex justify-content-center\" >\n        <h2>Places Disponibles</h2>\n      </div>\n    </div>\n    <hr>\n    <div class=\"reow mt-2\">\n      <div class=\"col-md-12\">\n        <div class=\"row mb-3\">\n          <div class=\"col-md-12 overflow-auto\" style=\"height: 35rem;\">\n            <div>\n              <div *ngFor='let location of locations$' class=\"card\">\n                <div class=\"card-header flex-row\" >\n                  <div class=\"row\">\n                    <div class=\"col-md-3\">\n                      <h2><b>{{location.location_name}}</b></h2>\n                    </div>\n                    <div class=\"col-md-7\">\n                      <h3><b>Places Totales :</b> {{location.slots}}</h3>\n                    </div>\n                  </div>\n                </div>             \n                <div>\n                  <div class=\"card-body\">\n                    <div class=\"row\">\n                      <div class=\"col-auto mr-auto\">\n                        <h4><b> Adresse :</b></h4> <p>{{location.area}}</p>\n                        <hr>\n                        <h4><b> Prix par heure </b></h4>\n                        <div *ngFor='let vehicle of vehicles$'>\n                          <p>{{vehicle.vehicle_type}} : {{vehicle.cost}} €</p>\n                        </div>\n                      </div>\n                      \n                      <div class=\"col-auto\">\n                        <button class=\"button\" type=\"button\" routerLink=\"/dashboard/bookslot/{{location.locationid}}\">\n                          Réserver\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header-login',\n  templateUrl: './header-login.component.html',\n  styleUrls: ['./header-login.component.css']\n})\nexport class HeaderLoginComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  logout(){\n    sessionStorage.clear();\n    console.log(sessionStorage);\n    this.router.navigate(['login']);\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" style=\"background-color: #ececec !important;box-shadow: 0px 0px 8px rgba(128, 128, 128, 0.438);\">\n    <a class=\"navbar-brand\" href=\"#\" style=\"color:#6c757d;\"> <i class=\"fas fa-car mr-2\" style=\"color: black;font-size: 30px;\"></i><b>Smart-Park</b></a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n      </ul>\n      <div class=\"form-inline my-2 my-lg-0\">\n        <button class=\"button\" routerLink=\"/\">Acceuil</button>\n        <button class=\"button\" (click)='logout()'>Déconnexion</button>\n      </div>\n    </div>\n  </nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" style=\"background-color: #ececec !important;box-shadow: 0px 0px 8px rgba(128, 128, 128, 0.438);\">\n    <a class=\"navbar-brand\" href=\"#\" style=\"color:#6c757d;\"> <i class=\"fas fa-car mr-2\" style=\"color: black;font-size: 30px;\"></i><b>Smart-Park</b></a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n      </ul>\n      <div class=\"form-inline my-2 my-lg-0\">\n        <button class=\"button\" routerLink=\"/\">Acceuil</button>\n        <button class=\"button\" routerLink=\"/signup\">Inscription</button>\n        <button class=\"button\" routerLink=\"/login\">Connexion</button>\n        <button class=\"button\" routerLink=\"/admin\">Admin</button>\n      </div>\n    </div>\n  </nav>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home-main-section',\n  templateUrl: './home-main-section.component.html',\n  styleUrls: ['./home-main-section.component.css']\n})\nexport class HomeMainSectionComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  checkSession(){\n    if (sessionStorage.length == 0){\n      \n      this.router.navigate(['/login'])\n    }\n    else{\n      this.router.navigate(['/dashboard'])\n    }\n  }\n}\n","<div class=\"row d-flex justify-content-center\" style=\"height: 70vh;\">\n    <div class=\"col-md-6 d-flex justify-content-center p-0 align-items-center flex-column\">\n        <h1><b>Ne faites plus la queue ...</b></h1>\n        <h2>Reservez votre place dès maintenant !</h2>\n        <br>\n        <div class=\"\">\n            <!-- <input class=\"getquote\" type=\"text\" placeholder=\"Parking Slot\"> -->\n            <button class=\"getquotebtn\"(click)='checkSession()' >Réserver</button>\n        </div>\n    </div>\n    <div class=\"col-md-6 d-flex justify-content-center align-items-center\">\n        <div>\n            <img  src=\"https://image.freepik.com/free-vector/city-driver-concept-illustration_114360-1209.jpg\" alt=\"\">\n        </div>\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-md-3 options-primary p-0 d-flex justify-content-center align-items-center flex-column\">\n        <i class=\"far fa-money-bill-alt\" style=\"font-size: 60px;margin-bottom: 10px;\"></i>\n        <p>Economique</p>\n    </div>\n    <div class=\"col-md-3 options-secondary p-0 d-flex justify-content-center align-items-center flex-column\">\n        <i class=\"fas fa-history\" style=\"font-size: 60px;margin-bottom: 10px;\"></i>\n        <p>Rapide</p>\n    </div>\n    <div class=\"col-md-3 options-primary p-0 d-flex justify-content-center align-items-center flex-column\">\n        <i class=\"fas fa-user-shield\" style=\"font-size: 60px;margin-bottom: 10px;\"></i>\n        <p>Réservation Facile</p>\n    </div>\n    <div class=\"col-md-3 options-secondary p-0 d-flex justify-content-center align-items-center flex-column\">\n        <i class=\"fas fa-calendar-alt\" style=\"font-size: 60px;margin-bottom: 10px;\"></i>\n        <p>24/7</p>\n    </div>\n</div>\n\n\n<div class=\"row d-flex justify-content-center\" style=\"height: 70vh;\">\n    <div class=\"col-md-6 d-flex justify-content-center align-items-center\">\n        <div>\n            <img  src=\"https://image.freepik.com/free-vector/coronavirus-border-closure-concept-illustration_114360-1753.jpg\" alt=\"\">\n        </div>\n    </div>\n    <div class=\"col-md-6 d-flex justify-content-center flex-column\">\n        <h1><b>Comment ça fonctionne ?</b></h1>\n        <p>Lorsque vous êtes en déplacement, Smart-Park vous permet de trouver et de payer facilement une place de stationnement sans avoir à revenir pour alimenter l'horodateur. <br>\n            Et pour plus de commodité, vous pouvez réserver des places à l'avance.<br>\n            Lorsque vous cherchez une place dans l'instant ou que vous souhaitez réserver une place à l'avance, Smart-Park met le pouvoir dans la paume de votre main.\n        </p>\n        <br>\n        <div>\n            <button class=\"getquotebtn\" (click)='checkSession()'>Réserver</button>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  show: boolean;\n  constructor() { }\n\n  ngOnInit(): void {\n    this.checklogin();\n  }\n  checklogin(){\n    if (sessionStorage.length == 0){\n      this.show = true\n    }\n    else{\n      this.show = false\n    }\n  }\n}\n","<app-header *ngIf=\"show\"></app-header>\n<app-header-login *ngIf=\"!show\"></app-header-login>\n<app-home-main-section></app-home-main-section>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  apiUrl = 'https://smartparkapi.antopoid.com/admin';\n\n  httpOptions = {\n    headers :new HttpHeaders({\n      'Content-Type':'application/json'\n    })    \n  }\n  \n  constructor(private _http: HttpClient) { }\n\n  loginCheck(loginDetails){\n    return this._http.post<Boolean>(this.apiUrl,loginDetails, this.httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Bookings } from '../models/bookings.model';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookingsService {\n\n  apiUrl = 'https://smartparkapi.antopoid.com'\n  \n  httpOptions = {\n    headers :new HttpHeaders({\n      'Content-Type':'application/json'\n    })    \n  }\n\n  constructor(private _http: HttpClient) { }\n\n  getAllBookings(){\n    return this._http.get<Bookings[]>(this.apiUrl+'/bookings/allBookings')\n  }\n\n  getBookings(email){\n    return this._http.get<Bookings[]>(this.apiUrl+'/bookings/getByUser/'+email);\n  }\n\n  addBooking(id,bookings):Observable<Bookings>{\n    bookings.locationid = id;\n    bookings.email = sessionStorage.getItem('email');\n    console.log(bookings);\n    return this._http.post<Bookings>(this.apiUrl+'/bookings/add', JSON.stringify(bookings), this.httpOptions ); \n  }\n\n  endBooking(bookingid){\n    return this._http.get<Boolean>(this.apiUrl+'/bookings/endBooking/'+bookingid);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Locations } from '../models/locations.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationsService {\n\n  httpOptions = {\n    headers :new HttpHeaders({\n      'Content-Type':'application/json'\n    })    \n  }\n  \n  apiUrl = 'https://smartparkapi.antopoid.com/locations';\n\n  constructor(private _http: HttpClient) { }\n\n  getLocations(){\n    return this._http.get<Locations[]>(this.apiUrl);\n  }\n\n  addLocation(location){\n    return this._http.post<Boolean>(this.apiUrl+'/add', location, this.httpOptions ); \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Slots } from '../models/slots.model';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SlotsService {\n\n  apiUrl = 'https://smartparkapi.antopoid.com'\n\n  httpOptions = {\n    headers :new HttpHeaders({\n      'Content-Type':'application/json'\n    })    \n  }\n\n  constructor(private _http: HttpClient) { }\n\n  getSlotById(locationid){\n    return this._http.get<Slots[]>(this.apiUrl+'/slots/getbyid/'+locationid);\n  }\n  getAllSlots(){\n    return this._http.get<Slots[]>(this.apiUrl+'/slots');\n  }\n  addSlot(slot){\n    return this._http.post<Boolean>(this.apiUrl+'/slots/add', slot, this.httpOptions ); \n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Users } from 'src/app/models/users.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  apiUrl = 'https://smartparkapi.antopoid.com/users';\n\n  httpOptions = {\n    headers :new HttpHeaders({\n      'Content-Type':'application/json'\n    })    \n  }\n  \n  constructor(private _http: HttpClient) { }\n\n  loginCheck(loginDetails){\n    return this._http.post<Boolean>(this.apiUrl+'/login',loginDetails, this.httpOptions);\n  }\n\n  signup(signupDetails){\n    return this._http.post<Boolean>(this.apiUrl+'/signup',signupDetails, this.httpOptions);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Vehicle } from '../models/vehicle.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VehicleService {\n\n  apiUrl = 'https://smartparkapi.antopoid.com/vehicle';\n\n  httpOptions = {\n    headers :new HttpHeaders({\n      'Content-Type':'application/json'\n    })    \n  }\n  \n  constructor(private _http: HttpClient) { }\n\n  getVehicles(){\n    return this._http.get<Vehicle[]>(this.apiUrl);\n  }\n\n  addVehicle(vehicle){\n    return this._http.post<Vehicle>(this.apiUrl+'/add', vehicle, this.httpOptions)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}