{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/admin-dashboard/add-location/add-location.component.ts","./src/app/admin/admin-dashboard/add-location/add-location.component.html","./src/app/admin/admin-dashboard/add-slot/add-slot.component.ts","./src/app/admin/admin-dashboard/add-slot/add-slot.component.html","./src/app/admin/admin-dashboard/add-vehicle/add-vehicle.component.ts","./src/app/admin/admin-dashboard/add-vehicle/add-vehicle.component.html","./src/app/admin/admin-dashboard/admin-dashboard.component.ts","./src/app/admin/admin-dashboard/admin-dashboard.component.html","./src/app/admin/admin-dashboard/allbookings/allbookings.component.ts","./src/app/admin/admin-dashboard/allbookings/allbookings.component.html","./src/app/admin/admin-login/admin-login.component.ts","./src/app/admin/admin-login/admin-login.component.html","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html","./src/app/dashboard/bookings/bookings.component.ts","./src/app/dashboard/bookings/bookings.component.html","./src/app/dashboard/bookslot/bookslot.component.ts","./src/app/dashboard/bookslot/bookslot.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/slots/slots.component.ts","./src/app/dashboard/slots/slots.component.html","./src/app/header-login/header-login.component.ts","./src/app/header-login/header-login.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home-main-section/home-main-section.component.ts","./src/app/home-main-section/home-main-section.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/services/admin.service.ts","./src/app/services/bookings.service.ts","./src/app/services/locations.service.ts","./src/app/services/slots.service.ts","./src/app/services/users.service.ts","./src/app/services/vehicle.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { LocationsService } from 'src/app/services/locations.service';\nimport { Locations } from 'src/app/models/locations.model';\n\n@Component({\n  selector: 'app-add-location',\n  templateUrl: './add-location.component.html',\n  styleUrls: ['./add-location.component.css']\n})\nexport class AddLocationComponent implements OnInit {\n\n  form = new FormGroup({\n    location_name : new FormControl('', Validators.required),\n    area : new FormControl('', Validators.required)\n  })\n  \n  constructor(private locationService: LocationsService) { }\n\n  locations$ : Locations[];\n\n  ngOnInit(): void {\n    this.loadLocations();\n  }\n\n   onSubmit(){\n    this.locationService.addLocation(JSON.stringify(this.form.value))\n    .subscribe((data => {\n      if(data == true){\n        alert(\"Location Added\")\n      }\n      else{\n        alert('Something went wrong')\n      }\n    }))\n   }\n\n   loadLocations(){\n    return this.locationService.getLocations()\n    .subscribe(data => this.locations$ = data)\n  }\n}\n","<div class=\"row mt-3  justify-content-center\">\n    <div class=\"col-md-11 card\" >\n        <div class=\"row \" style=\"background-color: #ff4f5a;color: white;margin: 10px;padding: 10px;\">\n            <div class=\"col-md-12 d-flex justify-content-center\" >\n                <h2>Add Location</h2>\n            </div>\n        </div>\n        <hr>\n        <div class=\"row mt-2\">\n            <div class=\"col-md-12\">\n                <div class=\"row mb-3\">\n                    <div class=\"col-md-12\">\n                        <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\" class=\"card m-2\">\n                            <div class=\"col-md-12\">\n                                <div class=\"m-1\">\n                                    <input class=\"input form-control\" formControlName=\"location_name\" [ngClass]=\"{ 'is-invalid':form.get('location_name').touched && form.get('location_name').invalid}\" name=\"location_name\" type=\"text\" placeholder=\"Location Name\"  autocomplete=\"off\" required>\n                                    <div class=\"invalid-feedback\">\n                                        <div>\n                                            This Field is required!!\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n                            <div class=\"col-md-12 \">\n                                <div class=\"m-1\">\n                                    <input class=\"input form-control\" formControlName=\"area\" [ngClass]=\"{ 'is-invalid':form.get('area').touched && form.get('area').invalid}\" name=\"area\" type=\"text\" placeholder=\"Address\" required>\n                                    <div class=\"invalid-feedback\">\n                                        <div>\n                                            This Field is required!!\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-12 mt-2 mb-5 \">\n                                <div class=\"m-1 mt-4\">\n                                    <button class=\"button\" type=\"submit\" [disabled]=\"!form.valid\">Add</button>\n                                </div>\n                            </div>\n                        </form>\n                        <hr>\n                        <div class=\"m-2\">\n                            <h3 class=\"font-weight-bold\">Locations Available:</h3>\n                        </div>\n                        \n                        <div class=\"card m-2\">\n                            <div class=\"row p-2\">\n                                <div class=\"col\">\n                                    <b>Location</b>\n                                </div>\n                                <div class=\"col\">\n                                   <b>Area</b>\n                                </div>\n                            </div>\n                            <hr class=\"m-1\">\n                            <div class=\"row p-2\" *ngFor='let location of locations$'>\n                                <div class=\"col\" >\n                                    {{location.location_name}}\n                                </div>\n                                <div class=\"col\">\n                                    {{location.area}}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { SlotsService } from 'src/app/services/slots.service';\nimport { Slots } from 'src/app/models/slots.model';\nimport { LocationsService } from 'src/app/services/locations.service';\nimport { Locations } from 'src/app/models/locations.model';\n\n@Component({\n  selector: 'app-add-slot',\n  templateUrl: './add-slot.component.html',\n  styleUrls: ['./add-slot.component.css']\n})\nexport class AddSlotComponent implements OnInit {\n  \n  slots$: Slots[];\n  locations$: Locations[];\n  form = new FormGroup({\n    locationid : new FormControl('', Validators.required),\n    slotid : new FormControl('', Validators.required),\n    slotno : new FormControl('', Validators.required)\n  })\n  constructor(private slotService: SlotsService, private locationService : LocationsService) { }\n\n  ngOnInit(): void {\n    this.getAllSlots();\n    this.loadLocations();\n  }\n  onSubmit(){\n    this.slotService.addSlot(JSON.stringify(this.form.value))\n    .subscribe((data => {\n      if(data == true){\n        alert(\"Slot Added\")\n      }\n      else{\n        alert('Something went wrong')\n      }\n    }))\n  }\n\n  getAllSlots(){\n    this.slotService.getAllSlots()\n    .subscribe(data => this.slots$ = data)\n  }\n\n  loadLocations(){\n    return this.locationService.getLocations()\n    .subscribe(data => this.locations$ = data)\n  }\n}\n","<div class=\"row mt-3  justify-content-center\">\n    <div class=\"col-md-11 card\" >\n        <div class=\"row \" style=\"background-color: #ff4f5a;color: white;margin: 10px;padding: 10px;\">\n            <div class=\"col-md-12 d-flex justify-content-center\" >\n                <h2>Add Slot</h2>\n            </div>\n        </div>\n        <hr>\n        <div class=\"row mt-2\">\n            <div class=\"col-md-12\">\n                <div class=\"row mb-3\">\n                    <div class=\"col-md-12\">\n                        <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\" class=\"card m-2\">\n\n                            <div class=\"col-md-12\">\n                                <div class=\"m-1\">\n                                    <div class=\"form-group\">\n                                        <label ><h3 class=\"font-weight-bold m-0\">Select Location:</h3></label>\n                                        <select class=\"form-control\" formControlName=\"locationid\" [ngClass]=\"{ 'is-invalid':form.get('locationid').touched && form.get('locationid').invalid}\" name=\"locationid\">\n                                          <option *ngFor='let location of locations$' value=\"{{location.locationid}}\">{{location.locationid}}. {{location.location_name}}</option>\n                                        </select>                                    \n                                        <div class=\"invalid-feedback\">\n                                            <div>\n                                                This Field is required!!\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n\n                            <div class=\"col-md-12\">\n                                <div class=\"m-1\">\n                                    <input class=\"input form-control\" formControlName=\"slotid\" [ngClass]=\"{ 'is-invalid':form.get('slotid').touched && form.get('slotid').invalid}\" name=\"slotid\" type=\"text\" placeholder=\"Slot ID\"  autocomplete=\"off\" required>\n                                    <small>Format: slotid + slot + slotno</small>\n                                    <div class=\"invalid-feedback\">\n                                        <div>\n                                            This Field is required!!\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n                            <div class=\"col-md-12 \">\n                                <div class=\"m-1\">\n                                    <input class=\"input form-control\" formControlName=\"slotno\" [ngClass]=\"{ 'is-invalid':form.get('slotno').touched && form.get('slotno').invalid}\" name=\"slotno\" type=\"text\" placeholder=\"Slot Number\" required>\n                                    <small>Format: Slot + slotno</small>\n                                    <div class=\"invalid-feedback\">\n                                        <div>\n                                            This Field is required!!\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-12 mt-2 mb-2 \">\n                                <div class=\"m-1 mt-4\">\n                                    <button class=\"button\" type=\"submit\" [disabled]=\"!form.valid\">Add</button>\n                                </div>\n                            </div>\n                        </form>\n                        <hr>\n                        <div class=\"m-2\">\n                            <h3 class=\"font-weight-bold\">Slots Available:</h3>\n                        </div>\n                        <div class=\"card m-2 slots\">\n                            <div class=\"row p-2\">\n                                <div class=\"col-2\">\n                                    <b>Location ID</b>\n                                </div>\n                                <div class=\"col-4\">\n                                   <b>Slot ID</b>\n                                </div>\n                                <div class=\"col-4\">\n                                    <b>Slot Number</b>\n                                 </div>\n                            </div>\n                            <hr class=\"m-1\">\n                            <div class=\"row p-2\" *ngFor='let slot of slots$'>\n                                <div class=\"col-2\" >\n                                    {{slot.locationid}}\n                                </div>\n                                <div class=\"col-4\">\n                                    {{slot.slotid}}\n                                </div>\n                                <div class=\"col-4\">\n                                    {{slot.slotno}}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Vehicle } from 'src/app/models/vehicle.model';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { VehicleService } from 'src/app/services/vehicle.service';\n\n@Component({\n  selector: 'app-add-vehicle',\n  templateUrl: './add-vehicle.component.html',\n  styleUrls: ['./add-vehicle.component.css']\n})\nexport class AddVehicleComponent implements OnInit {\n\n  vehicles$ : Vehicle[];\n  form = new FormGroup({\n    vehicle_type : new FormControl('', Validators.required),\n    cost : new FormControl('', Validators.required)\n  })\n  constructor(private vehicleservice : VehicleService) { }\n\n  ngOnInit(): void {\n    this.loadVehicle();\n  }\n\n  loadVehicle(){\n    this.vehicleservice.getVehicles()\n    .subscribe(data => this.vehicles$ = data) \n  }\n\n  onSubmit(){\n    this.vehicleservice.addVehicle(JSON.stringify(this.form.value))\n    .subscribe(data => console.log(data))\n    alert('Vehicle Added')\n    location.reload();\n  }\n}\n","<div class=\"row mt-3  justify-content-center\">\n    <div class=\"col-md-11 card\" >\n        <div class=\"row \" style=\"background-color: #ff4f5a;color: white;margin: 10px;padding: 10px;\">\n            <div class=\"col-md-12 d-flex justify-content-center\" >\n                <h2>Add Vehicle</h2>\n            </div>\n        </div>\n        <hr>\n        <div class=\"row mt-2\">\n            <div class=\"col-md-12\">\n                <div class=\"row mb-3\">\n                    <div class=\"col-md-12\">\n                        <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\" class=\"card m-2\">\n\n                            <div class=\"col-md-12\">\n                                <div class=\"m-1\">\n                                    <input class=\"input form-control\" formControlName=\"vehicle_type\" [ngClass]=\"{ 'is-invalid':form.get('vehicle_type').touched && form.get('vehicle_type').invalid}\" name=\"vehicle_type\" type=\"text\" placeholder=\"Vehicle Type\"  autocomplete=\"off\" required>\n                                    <div class=\"invalid-feedback\">\n                                        <div>\n                                            This Field is required!!\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n                            <div class=\"col-md-12 \">\n                                <div class=\"m-1\">\n                                    <input class=\"input form-control\" formControlName=\"cost\" [ngClass]=\"{ 'is-invalid':form.get('cost').touched && form.get('cost').invalid}\" name=\"cost\" type=\"text\" placeholder=\"Price per hour\" autocomplete=\"off\" required>\n                                    <div class=\"invalid-feedback\">\n                                        <div>\n                                            This Field is required!!\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-12 mt-2 mb-2 \">\n                                <div class=\"m-1 mt-4\">\n                                    <button class=\"button\" type=\"submit\" [disabled]=\"!form.valid\">Add</button>\n                                </div>\n                            </div>\n                        </form>\n                        <hr>\n                        <div class=\"m-2\">\n                            <h3 class=\"font-weight-bold\">Vehicle Available:</h3>\n                        </div>\n                        <div class=\"card m-2 slots\">\n                            <div class=\"row p-2\">\n                                <div class=\"col-2\">\n                                    <b>Vehicle ID</b>\n                                </div>\n                                <div class=\"col-4\">\n                                   <b>Vehicle Type</b>\n                                </div>\n                                <div class=\"col-4\">\n                                    <b>Price per hour</b>\n                                 </div>\n                            </div>\n                            <hr class=\"m-1\">\n                            <div class=\"row p-2\" *ngFor='let vehicle of vehicles$'>\n                                <div class=\"col-2\" >\n                                    {{vehicle.vehicleid}}\n                                </div>\n                                <div class=\"col-4\">\n                                    {{vehicle.vehicle_type}}\n                                </div>\n                                <div class=\"col-4\">\n                                    {{vehicle.cost}}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent implements OnInit {\n\n  constructor(private route: Router) { }\n\n  ngOnInit(): void {\n    this.checkLogin();\n  }\n\n  logout(){\n    sessionStorage.clear()\n    this.route.navigate(['admin'])\n  }\n\n  checkLogin(){\n    if (sessionStorage.length == 0){\n      this.route.navigate(['admin'])\n    }\n  }\n}\n","<!-- <app-header-login></app-header-login> -->\n<div class=\"row justify-content-center\">\n    <div class=\"col-md-2 p-0 sidebar d-flex align-items-center flex-column\">\n        <div>\n            <button routerLink=\"/admin-dashboard\" class=\"button\">Ajouter Parking</button>\n        </div>\n        <div>\n            <button routerLink=\"/admin-dashboard/add-slot\" class=\"button\">Ajouter Place</button>\n        </div>\n        <div>\n            <button routerLink=\"/admin-dashboard/add-vehicle\" class=\"button\">Ajouter Vehicule</button>\n        </div>\n        <div>\n            <button routerLink=\"/admin-dashboard/allbookings\" class=\"button\">Toutes les réservations</button>\n        </div>\n        <div>\n            <button (click)=\"logout()\" class=\"button\">Déconnexion</button>\n        </div>\n    </div>\n    <div class=\"col-md-10\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Bookings } from 'src/app/models/bookings.model';\nimport { BookingsService } from 'src/app/services/bookings.service';\n\n@Component({\n  selector: 'app-allbookings',\n  templateUrl: './allbookings.component.html',\n  styleUrls: ['./allbookings.component.css']\n})\nexport class AllbookingsComponent implements OnInit {\n\n  AllBookings$ : Bookings[];\n\n  constructor(private bookingsService : BookingsService) { }\n\n  ngOnInit(): void {\n    this.getAllBookings();\n  }\n\n  getAllBookings(){\n    return this.bookingsService.getAllBookings()\n    .subscribe(data => this.AllBookings$ = data)\n  }\n\n}\n","<div class=\"row mt-3  justify-content-center\">\n    <div class=\"col-md-11 card\" >\n        <div class=\"row \" style=\"background-color: #ff4f5a;color: white;margin: 10px;padding: 10px;\">\n            <div class=\"col-md-12 d-flex justify-content-center\" >\n                <h2>All Bookings</h2>\n            </div>\n        </div>\n        <hr>\n        <div class=\"row mt-2\">\n            <div class=\"col-md-12\">\n                <table class=\"table\">\n                    <thead class=\"thead\">\n                      <tr>\n                        <th scope=\"col\">Booking ID</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Vehicle Type</th>\n                        <th scope=\"col\">Vehicle No</th>\n                        <th scope=\"col\">Date</th>\n                        <th scope=\"col\">Time</th>\n                        <th scope=\"col\">Duration</th>\n                        <th scope=\"col\">Cost</th>\n                        <th scope=\"col\">Location ID</th>\n                        <th scope=\"col\">Slot ID</th>\n                        <th scope=\"col\">Status</th>\n                      </tr>\n                    </thead>\n                    <tbody >\n                      <tr *ngFor='let booking of AllBookings$'>\n                        <th scope=\"row\">{{booking.bookingid}}</th>\n                        <td>{{booking.email}}</td>\n                        <td>{{booking.vehicle_type}}</td>\n                        <td>{{booking.vehicle_no}}</td>\n                        <td>{{booking.date}}</td>\n                        <td>{{booking.time}}</td>\n                        <td>{{booking.duration}}</td>\n                        <td>{{booking.cost}}</td>\n                        <td>{{booking.locationid}}</td>\n                        <td>{{booking.slotid}}</td>\n                        <div *ngIf='booking.paid == 1'>\n                          <td class=\"text-success\">Booking Ended</td>\n                        </div>\n                        <div *ngIf='booking.paid == 0'>\n                          <td class=\"text-danger\">Booking ongoing</td>\n                        </div>\n                      </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css']\n})\nexport class AdminLoginComponent implements OnInit {\n\n  form = new FormGroup({\n    adminid : new FormControl('', Validators.required),\n    password : new FormControl('', Validators.required)\n  })\n  constructor(private route : Router, private adminService: AdminService) { }\n\n  ngOnInit(): void {\n  }\n  onSubmit() {\n    var loginJson = JSON.stringify(this.form.value);\n    this.adminService.loginCheck(loginJson)\n    .subscribe((data => {\n      if(data == true){\n      alert(\"Login successful\");\n      var jsonData = JSON.parse(loginJson);\n      this.storeLogin(jsonData['email']);\n      this.route.navigate(['/admin-dashboard']);\n      \n      }\n      else{\n        alert(\"Invalid Login\"); \n      }\n    }))\n  }\n\n  storeLogin(email){\n    sessionStorage.setItem('admin',email);\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-12 wrapper d-flex justify-content-center align-items-center\" style=\"height:95vh\">\n        <div class=\"row d-flex justify-content-center align-items-center formwrapper card\">\n            <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\">\n                <div class=\"col-md-12 mt-4 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <!-- <button class=\"button\" routerLink=\"/signup\">Sign Up </button>\n                        <button class=\"button\" routerLink=\"/login\">Login</button> -->\n                        <h2>Connexion Administrateur</h2> \n                    </div>\n                </div>\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <input class=\"input form-control\" formControlName=\"adminid\" [ngClass]=\"{ 'is-invalid':form.get('adminid').touched && form.get('adminid').invalid}\" name=\"adminid\" type=\"email\" placeholder=\"Admin ID\" autocomplete=\"off\" required>\n                        <div class=\"invalid-feedback\">\n                            <div *ngIf=\"form.get('adminid').errors?.required\">\n                                This Field is required!!\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <input class=\"input form-control\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid':form.get('password').touched && form.get('password').invalid }\" type=\"password\" placeholder=\"Mot De Passe\" required>\n                        <div class=\"invalid-feedback\">\n                            <div>\n                                This Field is required!!\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"mt-4\">\n                        <p class=\"danger\"><button style=\"border:none;background-color: transparent;color: #ff4f5a;\">Mot De Passe Oublié ?</button></p>\n                    </div>\n                </div>\n                <div class=\"col-md-12 mt-2 mb-5 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1 mt-4\">\n                        <button class=\"button\" type=\"submit\" [disabled]=\"!form.valid\" >Connexion</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  \n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './auth/login/login.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { HomeComponent } from './home/home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SlotsComponent } from './dashboard/slots/slots.component';\nimport { BookingsComponent } from './dashboard/bookings/bookings.component';\nimport { BookslotComponent } from './dashboard/bookslot/bookslot.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { AdminLoginComponent } from './admin/admin-login/admin-login.component';\nimport { AdminDashboardComponent } from './admin/admin-dashboard/admin-dashboard.component';\nimport { AddLocationComponent } from './admin/admin-dashboard/add-location/add-location.component';\nimport { AddSlotComponent } from './admin/admin-dashboard/add-slot/add-slot.component';\nimport { AllbookingsComponent } from './admin/admin-dashboard/allbookings/allbookings.component';\nimport { AddVehicleComponent } from './admin/admin-dashboard/add-vehicle/add-vehicle.component';\n\nconst routes: Routes = [\n  {path:'',component:HomeComponent},\n  {path:'login',component:LoginComponent},\n  {path:'signup',component:SignupComponent},\n  {path:'dashboard',component:DashboardComponent,\n  children:[\n    {path:'',component:SlotsComponent},\n    {path:'bookings',component:BookingsComponent},\n    {path:'bookslot/:locationid',component:BookslotComponent}\n  ]},\n  {path:'admin',component: AdminComponent,\n  children:[\n    {path:'',component:AdminLoginComponent}\n  ]},\n  {path:'admin-dashboard',component: AdminDashboardComponent,\n  children:[\n    {path:'',component: AddLocationComponent},\n    {path:'add-slot', component: AddSlotComponent},\n    {path:'allbookings', component: AllbookingsComponent},\n    {path: 'add-vehicle', component: AddVehicleComponent}\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'car-parking';\n\n}\n\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { HomeMainSectionComponent } from './home-main-section/home-main-section.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { SlotsComponent } from './dashboard/slots/slots.component';\nimport { BookingsComponent } from './dashboard/bookings/bookings.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { BookslotComponent } from './dashboard/bookslot/bookslot.component';\n\nimport { AdminService} from './services/admin.service';\nimport { LocationsService } from './services/locations.service';\nimport { BookingsService } from './services/bookings.service';\nimport { VehicleService } from './services/vehicle.service';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderLoginComponent } from './header-login/header-login.component';\nimport { UsersService } from './services/users.service';\nimport { AdminComponent } from './admin/admin.component';\nimport { AdminLoginComponent } from './admin/admin-login/admin-login.component';\nimport { AdminDashboardComponent } from './admin/admin-dashboard/admin-dashboard.component';\nimport { AddLocationComponent } from './admin/admin-dashboard/add-location/add-location.component';\nimport { AddSlotComponent } from './admin/admin-dashboard/add-slot/add-slot.component';\nimport { AllbookingsComponent } from './admin/admin-dashboard/allbookings/allbookings.component';\nimport { SlotsService } from './services/slots.service';\nimport { AddVehicleComponent } from './admin/admin-dashboard/add-vehicle/add-vehicle.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    HomeMainSectionComponent,\n    SignupComponent,\n    LoginComponent,\n    HomeComponent,\n    SlotsComponent,\n    BookingsComponent,\n    DashboardComponent,\n    BookslotComponent,\n    HeaderLoginComponent,\n    AdminComponent,\n    AdminLoginComponent,\n    AdminDashboardComponent,\n    AddLocationComponent,\n    AddSlotComponent,\n    AllbookingsComponent,\n    AddVehicleComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    NoopAnimationsModule,\n    ReactiveFormsModule\n  ],\n  providers: [LocationsService, BookingsService, VehicleService, UsersService, SlotsService, AdminService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UsersService } from 'src/app/services/users.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form = new FormGroup({\n    email : new FormControl('', [Validators.required, Validators.email]),\n    password : new FormControl('', Validators.required)\n  })\n  constructor(private usersService: UsersService, public router: Router) { }\n\n  ngOnInit(): void {\n    this.checkLogin();\n  }\n     \n  onSubmit() {\n    var loginJson = JSON.stringify(this.form.value);\n    this.usersService.loginCheck(loginJson)\n    .subscribe((data => {\n      if(data == true){\n        alert(\"Login successful\");\n        var jsonData = JSON.parse(loginJson);\n        this.storeLogin(jsonData['email']);\n        this.router.navigate(['/dashboard']);\n      }\n      else{\n        alert(\"Invalid Login\"); \n      }\n    }))\n  }\n\n  storeLogin(email){\n    sessionStorage.setItem(\"email\", email); \n  }\n  checkLogin(){\n    if (sessionStorage.length != 0){\n      this.router.navigate(['/']);\n    }\n  }\n}\n","<app-header></app-header>\n<div class=\"row\">\n    <div class=\"col-md-12 wrapper d-flex justify-content-center align-items-center\" style=\"height:95vh\">\n        <div class=\"row d-flex justify-content-center align-items-center formwrapper card\">\n            <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\">\n                <div class=\"col-md-12 mt-4 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <button class=\"button\" routerLink=\"/signup\">Inscription</button>\n                        <button class=\"button\" routerLink=\"/login\">Connexion</button>\n                    </div>\n                </div>\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <input class=\"input form-control\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid':form.get('email').touched && form.get('email').invalid}\" name=\"email\" type=\"email\" placeholder=\"Email\" autocomplete=\"off\" required>\n                        <div class=\"invalid-feedback\">\n                            <div *ngIf=\"form.get('email').errors?.required\">\n                                This Field is required!!\n                            </div>\n                            <div *ngIf=\"form.get('email').errors?.email\">\n                                Enter Valid Email Address!!\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <input class=\"input form-control\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid':form.get('password').touched && form.get('password').invalid }\" type=\"password\" placeholder=\"Mot De Passe\" required>\n                        <div class=\"invalid-feedback\">\n                            <div>\n                                This Field is required!!\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"mt-4\">\n                        <p class=\"danger\"><button style=\"border:none;background-color: transparent;color: #ff4f5a;\">Mot de passe oublié ?</button></p>\n                    </div>\n                </div>\n                <div class=\"col-md-12 mt-2 mb-5 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1 mt-4\">\n                        <button class=\"button\" type=\"submit\" [disabled]=\"!form.valid\" >Connexion</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { UsersService } from 'src/app/services/users.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  form = new FormGroup({\n    email : new FormControl('', [Validators.required, Validators.email]),\n    fullname : new FormControl('', Validators.required),\n    mobno : new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required),\n    confPassword : new FormControl('',[Validators.required,this.confirmPasswordCheck])\n  })\n\n  constructor(private usersService: UsersService,  public router: Router) { }\n\n  ngOnInit(): void {\n    this.checkLogin();\n  }\n  onSubmit(){\n    var loginJson = JSON.stringify(this.form.value);\n    this.usersService.signup(loginJson)\n    .subscribe((data => {\n      if(data == true){\n      alert(\"Signup successful\");\n      var jsonData = JSON.parse(loginJson);\n      this.storeLogin(jsonData['email']);\n      this.router.navigate(['/dashboard']);\n      \n      }\n      else{\n        alert(\"User Already Exist\"); \n      }\n    }))\n  }\n\n  storeLogin(email){\n    sessionStorage.setItem(\"email\", email); \n  }\n\n  checkLogin(){\n    if (sessionStorage.length != 0){\n      this.router.navigate(['/']);\n    }\n  }\n\n  confirmPasswordCheck(control: AbstractControl){\n    if (control && control.value !== null || control.value != undefined){\n      const cnfPassword = control.value;\n      const passControl = control.root.get('password')\n\n      if (passControl){\n        const passValue = passControl.value;\n        if (passValue !== cnfPassword){\n          return {\n            isError: true\n          }\n        }\n      }\n    } \n    return null\n  }\n\n}\n","<app-header></app-header>\n<div class=\"row\">\n    <div class=\"col-md-12 wrapper d-flex justify-content-center align-items-center\" style=\"height:95vh\">\n        <div class=\"row d-flex justify-content-center align-items-center formwrapper card\">\n            <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\">\n                <div class=\"col-md-12 mt-4 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <button class=\"button\" routerLink=\"/signup\">Inscription</button>\n                        <button class=\"button\" routerLink=\"/login\">Connexion</button>\n                    </div>\n                </div>\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <input class=\"input form-control\"  formControlName=\"email\" [ngClass]=\"{ 'is-invalid':form.get('email').touched && form.get('email').invalid}\" autocomplete=\"off\" type=\"email\" placeholder=\"Email\">\n                        <div class=\"invalid-feedback\">\n                            <div *ngIf=\"form.get('email').errors?.required\">\n                                This Field is required!!\n                            </div>\n                            <div *ngIf=\"form.get('email').errors?.email\">\n                                Enter Valid Email Address!!\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <input class=\"input form-control\"  formControlName=\"fullname\" [ngClass]=\"{ 'is-invalid':form.get('fullname').touched && form.get('fullname').invalid}\" type=\"text\" placeholder=\"Nom Complet\">\n                        <div class=\"invalid-feedback\">\n                            <div>\n                                This Field is required!!\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <input class=\"input form-control\"  formControlName=\"mobno\" [ngClass]=\"{ 'is-invalid':form.get('mobno').touched && form.get('mobno').invalid}\" type=\"text\" placeholder=\"Numero Telephone\">\n                        <div class=\"invalid-feedback\">\n                            <div>\n                                This Field is required!!\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <input class=\"input form-control\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid':form.get('password').touched && form.get('password').invalid }\" type=\"password\" placeholder=\"Mot De Passe\">\n                        <div class=\"invalid-feedback\">\n                            <div>\n                                This Field is required!!\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1\">\n                        <input class=\"input form-control\" type=\"Password\" formControlName=\"confPassword\" [ngClass]=\"{ 'is-invalid':form.get('confPassword').touched && form.get('confPassword').invalid }\" formControlName=\"confPassword\" placeholder=\"Confirmer Mot De Passe\">\n                        <div class=\"invalid-feedback\">\n                            <div *ngIf=\"form.get('confPassword').errors?.required\">\n                                This Field is required!!\n                            </div>\n                            <div *ngIf=\"form.get('confPassword').errors?.isError\">\n                                Password does not match!!\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-12 mt-2 mb-5 d-flex flex-row justify-content-center\">\n                    <div class=\"m-1 mt-4\">\n                        <button class=\"button\" type=\"reset\">Reset</button>\n                        <button class=\"button\" [disabled]=\"!form.valid\">Inscription</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Bookings } from 'src/app/models/bookings.model';\nimport { BookingsService } from 'src/app/services/bookings.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-bookings',\n  templateUrl: './bookings.component.html',\n  styleUrls: ['./bookings.component.css']\n})\nexport class BookingsComponent implements OnInit {\n\n  show: boolean;\n  email$ =  sessionStorage.getItem('email');\n  bookings$: Bookings[] = [];\n\n  constructor(private bookingsService: BookingsService, \n    public router: Router) { }\n\n  ngOnInit() {\n    this.checkLogin();\n    this.getBookingById();\n    \n  }\n\n  getBookingById(){\n    return this.bookingsService.getBookings(this.email$)\n    .subscribe(data => {this.bookings$ = data, this.checkBookingFn();})\n  }\n\n  endBooking(bookingid){\n    return this.bookingsService.endBooking(bookingid)\n    .subscribe((data:{}) => {\n      alert('Booking Ended');\n      location.reload();\n      this.router.navigate(['dashboard/bookings'])\n    })\n  }\n  checkBookingFn(){\n    console.log()\n    if (this.bookings$.length == 0){\n      this.show = true\n    }\n    else{\n      this.show = false\n    }\n  }\n\n  checkLogin(){\n    if (sessionStorage.length == 0){\n      this.router.navigate(['login']);\n    }\n  }\n\n}\n","<div class=\"row mt-3  justify-content-center\">\n    <div class=\"col-md-11 card \" >\n        <div class=\"row \" style=\"background-color: #ff4f5a;color: white;margin: 10px;padding: 10px;\">\n            <div class=\"col-md-12 d-flex justify-content-center\" >\n                <h2>Mes Réservations</h2>\n            </div>\n        </div>\n        <hr>\n        <div class=\"row mt-2\">\n            <div class=\"col-md-12\">\n                <div class=\"row mb-3\">\n                    <div class=\"col-md-12 overflow-auto\" style=\"height: 35rem;\">\n                        <div class=\"accordion\" id=\"accordionExample\">\n                            <div *ngIf='!show'>\n                                <div *ngFor='let booking of bookings$'  class=\"card\">\n                                    <div class=\"card-header\" id=\"headingTwo\">\n                                        <div class=\"row\">\n                                            <div class=\"col-md-3\">\n                                                <h3><b>Localisation :</b> {{booking.locationid}}</h3>\n                                            </div>\n                                            <div class=\"col-md-7\">\n                                                <h3><b>Date :</b> {{booking.date}}</h3>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <div class=\"card-body\">\n                                            <div class=\"row\">\n                                                <div class=\"col-auto mr-auto\">\n                                                  <b>Numéro De Place :</b> {{booking.slotid}} <br> \n                                                  <b>Type De Vehicule :</b> {{booking.vehicle_type}} <br> \n                                                  <b>Durée :</b> {{booking.duration}} hours <br> \n                                                  <div *ngIf=\"booking.paid != 0\">\n                                                    <b>Coût :</b> {{booking.cost}} euros\n                                                  </div>\n                                                </div>\n                                                <div class=\"col-auto\" *ngIf='booking.paid == 0'>\n                                                  <button class=\"button\" (click) = 'endBooking(booking.bookingid)'> Fin De Réservation</button>\n                                                </div>\n                                                <div class=\"col-auto\" *ngIf='booking.paid != 0'>\n                                                    <p class=\"text-success font-weight-bold\">Réservation Complétée</p>\n                                                  </div>\n                                            </div>  \n                                        </div>\n                                    </div>\n                                </div>\n                            </div>  \n                            <div *ngIf='show'>\n                                <h2>\n                                    Aucune Réservation ...\n                                </h2>\n                                <button class=\"button\" routerLink='/dashboard' > Réserver</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BookingsService } from 'src/app/services/bookings.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { VehicleService } from 'src/app/services/vehicle.service';\nimport { Vehicle } from 'src/app/models/vehicle.model';\nimport { SlotsService } from 'src/app/services/slots.service';\nimport { Slots } from 'src/app/models/slots.model';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-bookslot',\n  templateUrl: './bookslot.component.html',\n  styleUrls: ['./bookslot.component.css']\n})\nexport class BookslotComponent implements OnInit {\n\n    load : boolean;\n    vehicles$: Vehicle[];\n    slots$: Slots[];\n    locationid = this.actRoute.snapshot.params['locationid'];\n    currentDate = new Date();\n    date = this.currentDate.getDate() + '-' + this.currentDate.getMonth() + '-' + this.currentDate.getFullYear()\n\n  @Input() bookingdetails = {\n    'email':'',\n    'locationid':'',\n    'vehicle_type':'',\n    'duration':0,\n    'time':'',\n    'slotid':'',\n    'date': this.date,\n    'vehicle_no':''\n  }\n  constructor(\n    private bookings:BookingsService, \n    private slotsService: SlotsService, \n    private vehicleService: VehicleService, \n    public actRoute :ActivatedRoute, \n    public router: Router) { }\n\n  ngOnInit(): void {\n    this.load = false;\n    this.getVehicles();\n    this.getSlotById();\n  }\n\n  getVehicles(){\n    return this.vehicleService.getVehicles()\n    .subscribe(data => this.vehicles$ = data)\n    \n  }\n  getSlotById(){\n    return this.slotsService.getSlotById(this.locationid)\n    .subscribe(data => this.slots$ = data)\n  }\n\n  addBooking(){\n\n    if(this.bookingdetails.vehicle_no == '' || this.bookingdetails.vehicle_type == '' || this.bookingdetails.slotid == '' || this.bookingdetails.duration == 0, this.bookingdetails.time == ''){\n      alert('Kindly fill all the data')\n      return\n    } \n    if (!this.checkTime(this.bookingdetails.time)){\n      alert(\"OOPS!! Try booking 2 hours earlier..\")\n      return\n    }\n    this.load = true;\n    this.bookings.addBooking(this.locationid, this.bookingdetails)\n    .subscribe((data:{}) => {\n      alert('Slot Booked');\n      this.router.navigate(['/dashboard/bookings'])\n    })\n  }\n\n  checkTime(bookingTime){\n\n  var currentTime = new Date();\n  \n  var ISTTime = new Date(currentTime.getTime() + (330 + currentTime.getTimezoneOffset())*60000)\n  ISTTime.setHours(ISTTime.getHours()+2)\n  \n  var time = bookingTime.split(':')\n  var h = parseInt(time[0])\n  var m = parseInt(time[1])\n  if (h<ISTTime.getHours() || (h == ISTTime.getHours() && m < ISTTime.getMinutes())){\n      return false\n  }\n    return true;\n  }\n}\n","<div class=\"row mt-3 justify-content-center\">\n    <div class=\"col-md-11 card\" >\n        <div class=\"row \" style=\"background-color: #4f5bff;color: white;margin: 10px;padding: 10px;\">\n            <div class=\"col-md-12 d-flex justify-content-center\" >\n                <h2>Place De Parking</h2>\n            </div>\n        </div>\n        <div *ngIf=\"load\" class=\"d-flex justify-content-center\">\n            <div class=\"loadingio-spinner-pulse-f18fi8swilg\"><div class=\"ldio-letfb25733\">\n                <div></div><div></div><div></div>\n                </div>\n            </div>\n        </div>\n        \n        <hr>\n        <div class=\"row mt-2\">\n            <div class=\"col-md-12\">\n                <div class=\"row mb-3\">\n                    <div class=\"col-md-12\">\n                        <h4>ID: {{locationid}}</h4>\n                        <form class=\"card\" name=\"bookingForm\">\n                            <!-- select vehicle    -->\n                            <div class=\"col-md-12 m-2\">\n                                <div class=\"form-group\">\n                                    <label for=\"vehicle_type\">Sélectionner le type de véhicule</label>\n                                    <select class=\"form-control\"  [(ngModel)]=\"bookingdetails.vehicle_type\" name=\"Type de vehicule\" id=\"vehicle_type\">\n                                            <option *ngFor='let vehicle of vehicles$' value=\"{{vehicle.vehicle_type}}\">{{vehicle.vehicle_type}}</option>                                  \n                                    </select>\n                                </div>\n                            </div>\n                            <!-- end vechicle select -->\n\n                            <!-- vehicle number enter -->\n                            <div class=\"col-md-12 m-2\">\n                                    <input class=\"input\" type=\"text\" [(ngModel)]=\"bookingdetails.vehicle_no\" name=\"Plaque d'immatriculation\" placeholder=\"Vehicle Number\" autocomplete=\"off\" required>\n\n                                    <small>FORMAT: AA-123-BB</small>\n                            </div>\n                            <!-- end vehicle number -->\n\n                            <!-- select date and time -->\n                            <div class=\"col-md-12 mt-2 mb-3\">\n                                <div class=\"row m-2\">\n                                    <div>\n                                        Sélectionner l'heure: <input type=\"time\" id=\"time\" [(ngModel)]=\"bookingdetails.time\" name=\"heure\">\n                                        <br>\n                                        <small>NOTE: Réserver 2 heures avant ...</small>\n                                    </div>            \n                                </div>\n                            </div>\n                            <!-- end date and time -->\n\n                            <!-- enter hours    -->\n                            <div class=\"col-md-12 mb-3 ml-2\">\n\n                                <input class=\"input mt-0\" name=\"Durée\" id=\"duration\" type=\"number\" min=\"1\" max=\"24\" [(ngModel)]=\"bookingdetails.duration\" id=\"duration\" placeholder=\"Heure Estimée\" autocomplete=\"off\"  required>\n                            </div>\n                            <!-- end hours    -->\n\n                            <!-- select slot    -->\n                            <div class=\"col-md-12\">\n                                <h4 class=\"m-2\">Selectionner la place de parking</h4>\n                                <div class=\"row border \">\n                                    <div class=\"col-2 m-1 pt-3 pb-0\"  *ngFor=\"let slot of slots$\" >   \n                                        <div  *ngIf=\"slot.status != 0;\" >\n                                            \n                                            <input type=\"radio\" disabled [(ngModel)]=\"bookingdetails.slotid\" id=\"{{slot.slotno}}\" name=\"slotid\" value=\"{{slot.slotid }}\">\n                                            <label  id=\"slot\" for=\"{{slot.slotno}}\">{{slot.slotno}}</label> \n                                            <small class=\"text-danger\">Deja Réservée!</small>\n                                          \n                                        </div>    \n                                        <div *ngIf=\"slot.status == 0;\">\n                                            <input type=\"radio\"  [(ngModel)]=\"bookingdetails.slotid\" id=\"{{slot.slotno}}\" name=\"disabled\" value=\"{{slot.slotid }}\">\n                                            <label id=\"slot\" for=\"{{slot.slotno}}\">{{slot.slotno}}</label><br>\n                                        </div>\n                                        \n                                        \n                                    </div>\n                                </div>\n                            </div>\n                            <!-- end slot select     -->\n                            \n                            <!-- book button    -->\n                            <div class=\"col-md-12 mt-3 mb-5\">\n                                <div class=\"m-1 mt-2\">\n                                    <div class=\"row\">\n                                        <div class=\"col-2\">\n                                            <input type=\"reset\" class=\"button\" value=\"Reset\">\n                                        </div>\n                                        <div class=\"col\">\n                                            <button class=\"button\"  (click)='addBooking()'>Réserver la place</button>\n                                        </div>\n                                    </div>                                    \n                                </div>\n                            </div>\n                            <!-- end book button -->\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.checkLogin();\n  }\n\n  checkLogin(){\n    if (sessionStorage.length == 0){\n      this.router.navigate(['login']);\n    }\n  }\n}\n","<app-header-login></app-header-login>\n<div class=\"row justify-content-center\">\n    <div class=\"col-md-2 p-0 sidebar d-flex align-items-center flex-column\">\n        <div>\n            <button routerLink=\"/dashboard\" class=\"button\">Places Disponibles</button>\n        </div>\n        <div>\n            <button routerLink=\"/dashboard/bookings\" class=\"button\">Mes Réservations</button>\n        </div>\n        <!-- <div>\n            <button routerLink=\"/dashboard/bookslot\" class=\"button\">Book Slot</button>\n        </div> -->\n    </div>\n    <div class=\"col-md-10\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Locations } from '../../models/locations.model';\nimport { LocationsService } from 'src/app/services/locations.service';\nimport { Vehicle } from 'src/app/models/vehicle.model';\nimport { VehicleService } from 'src/app/services/vehicle.service';\nimport { DashboardComponent } from 'src/app/dashboard/dashboard.component';\n\n@Component({\n  selector: 'app-slots',\n  templateUrl: './slots.component.html',\n  styleUrls: ['./slots.component.css']\n})\nexport class SlotsComponent implements OnInit {\n\n  locations$: Locations[];\n  vehicles$: Vehicle[];\n  sessionValue : string = \"\";\n\n  constructor(\n    private locationsService: LocationsService,\n    private vehicleService: VehicleService,\n    private dashboardComponent: DashboardComponent) { }\n\n  ngOnInit() {\n    this.dashboardComponent.checkLogin();\n    this.loadLocations();\n    this.loadVehicle();\n    \n  }\n\n  loadLocations(){\n    return this.locationsService.getLocations()\n    .subscribe(data => this.locations$ = data)\n  }\n\n  loadVehicle(){\n    return this.vehicleService.getVehicles()\n    .subscribe(data => this.vehicles$ = data)\n  }\n}\n","<div class=\"row mt-3  justify-content-center\">\n  <div class=\"col-md-11 card\" >\n    <div class=\"row \" style=\"background-color: #4f5bff;color: white;margin: 10px;padding: 10px;border-radius: 5px;\">\n      <div class=\"col-md-12 d-flex justify-content-center\" >\n        <h2>Places Disponibles</h2>\n      </div>\n    </div>\n    <hr>\n    <div class=\"reow mt-2\">\n      <div class=\"col-md-12\">\n        <div class=\"row mb-3\">\n          <div class=\"col-md-12 overflow-auto\" style=\"height: 35rem;\">\n            <div>\n              <div *ngFor='let location of locations$' class=\"card\">\n                <div class=\"card-header flex-row\" >\n                  <div class=\"row\">\n                    <div class=\"col-md-3\">\n                      <h2><b>{{location.location_name}}</b></h2>\n                    </div>\n                    <div class=\"col-md-7\">\n                      <h3><b>Places Totales :</b> {{location.slots}}</h3>\n                    </div>\n                  </div>\n                </div>             \n                <div>\n                  <div class=\"card-body\">\n                    <div class=\"row\">\n                      <div class=\"col-auto mr-auto\">\n                        <h4><b> Adresse :</b></h4> <p>{{location.area}}</p>\n                        <hr>\n                        <h4><b> Prix par heure </b></h4>\n                        <div *ngFor='let vehicle of vehicles$'>\n                          <p>{{vehicle.vehicle_type}} : {{vehicle.cost}} €</p>\n                        </div>\n                      </div>\n                      \n                      <div class=\"col-auto\">\n                        <button class=\"button\" type=\"button\" routerLink=\"/dashboard/bookslot/{{location.locationid}}\">\n                          Réserver\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header-login',\n  templateUrl: './header-login.component.html',\n  styleUrls: ['./header-login.component.css']\n})\nexport class HeaderLoginComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  logout(){\n    sessionStorage.clear();\n    console.log(sessionStorage);\n    this.router.navigate(['login']);\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" style=\"background-color: #ececec !important;box-shadow: 0px 0px 8px rgba(128, 128, 128, 0.438);\">\n    <a class=\"navbar-brand\" href=\"#\" style=\"color:#6c757d;\"> <i class=\"fas fa-car mr-2\" style=\"color: black;font-size: 30px;\"></i><b>Smart-Park</b></a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n      </ul>\n      <div class=\"form-inline my-2 my-lg-0\">\n        <button class=\"button\" routerLink=\"/\">Acceuil</button>\n        <button class=\"button\" (click)='logout()'>Déconnexion</button>\n      </div>\n    </div>\n  </nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" style=\"background-color: #ececec !important;box-shadow: 0px 0px 8px rgba(128, 128, 128, 0.438);\">\n    <a class=\"navbar-brand\" href=\"#\" style=\"color:#6c757d;\"> <i class=\"fas fa-car mr-2\" style=\"color: black;font-size: 30px;\"></i><b>Smart-Park</b></a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n      </ul>\n      <div class=\"form-inline my-2 my-lg-0\">\n        <button class=\"button\" routerLink=\"/\">Acceuil</button>\n        <button class=\"button\" routerLink=\"/signup\">Inscription</button>\n        <button class=\"button\" routerLink=\"/login\">Connexion</button>\n        <button class=\"button\" routerLink=\"/admin\">Admin</button>\n      </div>\n    </div>\n  </nav>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home-main-section',\n  templateUrl: './home-main-section.component.html',\n  styleUrls: ['./home-main-section.component.css']\n})\nexport class HomeMainSectionComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  checkSession(){\n    if (sessionStorage.length == 0){\n      \n      this.router.navigate(['/login'])\n    }\n    else{\n      this.router.navigate(['/dashboard'])\n    }\n  }\n}\n","<div class=\"row d-flex justify-content-center\" style=\"height: 70vh;\">\n    <div class=\"col-md-6 d-flex justify-content-center p-0 align-items-center flex-column\">\n        <h1><b>Ne faite plus la queue ...</b></h1>\n        <h2>Reserve ta place dès maintenant !</h2>\n        <br>\n        <div class=\"\">\n            <!-- <input class=\"getquote\" type=\"text\" placeholder=\"Parking Slot\"> -->\n            <button class=\"getquotebtn\"(click)='checkSession()' >Réserver</button>\n        </div>\n    </div>\n    <div class=\"col-md-6 d-flex justify-content-center align-items-center\">\n        <div>\n            <img  src=\"https://image.freepik.com/free-vector/city-driver-concept-illustration_114360-1209.jpg\" alt=\"\">\n        </div>\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-md-3 options-primary p-0 d-flex justify-content-center align-items-center flex-column\">\n        <i class=\"far fa-money-bill-alt\" style=\"font-size: 60px;margin-bottom: 10px;\"></i>\n        <p>Economique</p>\n    </div>\n    <div class=\"col-md-3 options-secondary p-0 d-flex justify-content-center align-items-center flex-column\">\n        <i class=\"fas fa-history\" style=\"font-size: 60px;margin-bottom: 10px;\"></i>\n        <p>Rapide</p>\n    </div>\n    <div class=\"col-md-3 options-primary p-0 d-flex justify-content-center align-items-center flex-column\">\n        <i class=\"fas fa-user-shield\" style=\"font-size: 60px;margin-bottom: 10px;\"></i>\n        <p>Réservation Facile</p>\n    </div>\n    <div class=\"col-md-3 options-secondary p-0 d-flex justify-content-center align-items-center flex-column\">\n        <i class=\"fas fa-calendar-alt\" style=\"font-size: 60px;margin-bottom: 10px;\"></i>\n        <p>24/7</p>\n    </div>\n</div>\n\n\n<div class=\"row d-flex justify-content-center\" style=\"height: 70vh;\">\n    <div class=\"col-md-6 d-flex justify-content-center align-items-center\">\n        <div>\n            <img  src=\"https://image.freepik.com/free-vector/coronavirus-border-closure-concept-illustration_114360-1753.jpg\" alt=\"\">\n        </div>\n    </div>\n    <div class=\"col-md-6 d-flex justify-content-center flex-column\">\n        <h1><b>Comment ça fonctionne ?</b></h1>\n        <p>Lorsque vous êtes en déplacement, Smart-Park vous permet de trouver et de payer facilement une place de stationnement sans avoir à revenir pour alimenter l'horodateur. <br>\n            Et pour plus de commodité, vous pouvez réserver des places à l'avance.<br>\n            Lorsque vous cherchez une place dans l'instant ou que vous souhaitez réserver une place à l'avance, Smart-Park met le pouvoir dans la paume de votre main.\n        </p>\n        <br>\n        <div>\n            <button class=\"getquotebtn\" (click)='checkSession()'>Réserver</button>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  show: boolean;\n  constructor() { }\n\n  ngOnInit(): void {\n    this.checklogin();\n  }\n  checklogin(){\n    if (sessionStorage.length == 0){\n      this.show = true\n    }\n    else{\n      this.show = false\n    }\n  }\n}\n","<app-header *ngIf=\"show\"></app-header>\n<app-header-login *ngIf=\"!show\"></app-header-login>\n<app-home-main-section></app-home-main-section>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  apiUrl = 'http://antopoid.com:8887/admin';\n\n  httpOptions = {\n    headers :new HttpHeaders({\n      'Content-Type':'application/json'\n    })    \n  }\n  \n  constructor(private _http: HttpClient) { }\n\n  loginCheck(loginDetails){\n    return this._http.post<Boolean>(this.apiUrl,loginDetails, this.httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Bookings } from '../models/bookings.model';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookingsService {\n\n  apiUrl = 'http://antopoid.com:8887'\n  \n  httpOptions = {\n    headers :new HttpHeaders({\n      'Content-Type':'application/json'\n    })    \n  }\n\n  constructor(private _http: HttpClient) { }\n\n  getAllBookings(){\n    return this._http.get<Bookings[]>(this.apiUrl+'/bookings/allBookings')\n  }\n\n  getBookings(email){\n    return this._http.get<Bookings[]>(this.apiUrl+'/bookings/getByUser/'+email);\n  }\n\n  addBooking(id,bookings):Observable<Bookings>{\n    bookings.locationid = id;\n    bookings.email = sessionStorage.getItem('email');\n    console.log(bookings);\n    return this._http.post<Bookings>(this.apiUrl+'/bookings/add', JSON.stringify(bookings), this.httpOptions ); \n  }\n\n  endBooking(bookingid){\n    return this._http.get<Boolean>(this.apiUrl+'/bookings/endBooking/'+bookingid);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Locations } from '../models/locations.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationsService {\n\n  httpOptions = {\n    headers :new HttpHeaders({\n      'Content-Type':'application/json'\n    })    \n  }\n  \n  apiUrl = 'http://antopoid.com:8887/locations';\n\n  constructor(private _http: HttpClient) { }\n\n  getLocations(){\n    return this._http.get<Locations[]>(this.apiUrl);\n  }\n\n  addLocation(location){\n    return this._http.post<Boolean>(this.apiUrl+'/add', location, this.httpOptions ); \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Slots } from '../models/slots.model';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SlotsService {\n\n  apiUrl = 'http://antopoid.com:8887'\n\n  httpOptions = {\n    headers :new HttpHeaders({\n      'Content-Type':'application/json'\n    })    \n  }\n\n  constructor(private _http: HttpClient) { }\n\n  getSlotById(locationid){\n    return this._http.get<Slots[]>(this.apiUrl+'/slots/getbyid/'+locationid);\n  }\n  getAllSlots(){\n    return this._http.get<Slots[]>(this.apiUrl+'/slots');\n  }\n  addSlot(slot){\n    return this._http.post<Boolean>(this.apiUrl+'/slots/add', slot, this.httpOptions ); \n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Users } from 'src/app/models/users.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  apiUrl = 'http://antopoid.com:8887/users';\n\n  httpOptions = {\n    headers :new HttpHeaders({\n      'Content-Type':'application/json'\n    })    \n  }\n  \n  constructor(private _http: HttpClient) { }\n\n  loginCheck(loginDetails){\n    return this._http.post<Boolean>(this.apiUrl+'/login',loginDetails, this.httpOptions);\n  }\n\n  signup(signupDetails){\n    return this._http.post<Boolean>(this.apiUrl+'/signup',signupDetails, this.httpOptions);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Vehicle } from '../models/vehicle.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VehicleService {\n\n  apiUrl = 'http://antopoid.com:8887/vehicle';\n\n  httpOptions = {\n    headers :new HttpHeaders({\n      'Content-Type':'application/json'\n    })    \n  }\n  \n  constructor(private _http: HttpClient) { }\n\n  getVehicles(){\n    return this._http.get<Vehicle[]>(this.apiUrl);\n  }\n\n  addVehicle(vehicle){\n    return this._http.post<Vehicle>(this.apiUrl+'/add', vehicle, this.httpOptions)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}